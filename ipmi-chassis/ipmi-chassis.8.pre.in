.TH IPMI-CHASSIS 8 "@ISODATE@" "ipmi-chassis @PACKAGE_VERSION@" "System Commands"
.SH NAME
ipmi-chassis \- manual page for ipmi-chassis.  IPMI Chassis @PACKAGE_VERSION@
.SH DESCRIPTION
IPMI Chassis \- Control an IPMI Chassis. 
.SH OPTIONS
#include <@top_srcdir@/common/doc/argp-common-inband.man>
#include <@top_srcdir@/common/doc/argp-common-outofband-hostranged.man>
#include <@top_srcdir@/common/doc/argp-common-authtype.man>
#include <@top_srcdir@/common/doc/argp-common-privlevel-user.man>
.if @WITH_DEBUG@ \{
#include <@top_srcdir@/common/doc/argp-common-debug.man>
\}
#include <@top_srcdir@/common/doc/argp-common-misc.man>
.TP
\fB\-c\fR, \fB\-\-get\-capabilities\fR
Get the chassis capabilities.
.TP
\fB\-s\fR, \fB\-\-get\-status\fR
Get the chassis status.
.TP
\fB\-O\fR, \fB\-\-chassis\-control\fR=\fICONTROL\fR
Control the chassis. Allowed values are:
power\-down, power\-up, power\-cycle, hard\-reset,
diagnostic\-interrupt, soft\-shutdown.
.TP
\fB\-I\fR, \fB\-\-chassis\-identify\fR=\fIIDENTIFY\fR
Chassis Identification. Allowed values are:
turn\-off to turn off identification, <interval> to
turn on identification for "interval" seconds,
force to turn on indefinitely.
.TP
\fB\-R\fR, \fB\-\-get\-system\-restart\-cause\fR
Get system restart cause.
.TP
\fB\-H\fR, \fB\-\-get\-power\-on\-hours\-counter\fR
Get Power on Hours counter.
.TP
\fB\-S\fR, \fB\-\-set\-power\-cycle\-interval\fR=\fIINTERVAL\fR
Set Power cycle interval to INTERVAL.
.TP
\fB\-G\fR, \fB\-\-get\-boot\-flags\fR
Get system boot\-flags.
.TP
\fB\-L\fR, \fB\-\-set\-boot\-flags\fR
Set system boot flags. Allowed flags are: boot\-type,
lock\-out\-reset\-button, blank\-screen, boot\-device, lock\-keyboard,
clear\-cmos, console\-redirection, force\-progress\-event\-traps,
firmware\-bios\-verbosity, user\-password\-bypass.
.TP
\fB\-\-boot\-type\fR[=\fIBOOT_TYPE\fR]
Set BIOS boot type to BOOT_TYPE.  Allowed values are:
pc\-compatible, EFI. Should be used with
set\-boot\-flags.
.TP
\fB\-\-lock\-out\-reset\-button\fR[=\fILOCK_OUT_RESET_BUTTON\fR]
Lock out reset button. Allowed values are: yes/no.
Should be used with set\-boot\-flags.
.TP
\fB\-\-blank\-screen\fR[=\fIBLANK_SCREEN\fR]
Blank screen. Allowed values are: yes/no. Should be
used with set\-boot\-flags.
.TP
\fB\-\-boot\-device\fR[=\fIBOOT_DEVICE\fR]
Set device to boot from to BOOT_DEVICE. Allowed
values are: pxe, disk, disk\-safe, diag, cd\-dvd,
floppy, bios. Should be used with set\-boot\-flags.
.TP
\fB\-\-lock\-keyboard\fR[=\fILOCK_KEYBOARD\fR]
Lock the keyboard. Allowed values are: yes/no. Should be
used with set\-boot\-flags.
.TP
\fB\-\-clear\-cmos\fR[=\fICLEAR_CMOS\fR]
Clear the CMOS. yes/no. Should be used with
set\-boot\-flags.
.TP
\fB\-\-console\-redirection\fR[=\fIREDIRECT_TO_CONSOLE\fR]
redirect to console. Allowed values are: default,
suppress, enable. Should be used with
set\-boot\-flags.
.TP
\fB\-\-user\-password\-bypass\fR[=\fIBYPASS_USER_PASSWORD\fR]
Bypass user password. Allowed values are: yes/no.
Should be used with set\-boot\-flags.
.TP
\fB\-\-force\-progress\-event\-traps\fR[=\fIFORCE_PROGRESS_EVENT_TRAPS\fR]
Force progress event traps. Allowed values are:
yes/no. Should be used with set\-boot\-flags.
.TP
\fB\-\-firmware\-bios\-verbosity\fR[=\fIFIRMWARE_BIOS_VERBOSITY\fR]
Select firmware verbosity. Allowed values are:
default, quiet, verbose. Should be used with
set\-boot\-flags.
.TP
\fB\-X\fR, \fB\-\-set\-power\-restore\-policy\fR=\fIPOLICY\fR
Set power restore policy.  Allowed values are: list\-supported\-policies, always\-on, restore,
always\-off.  See current power restore policy via the \-\-get\-status
option.
#include <@top_srcdir@/common/doc/argp-common-hostranged-options.man>
#include <@top_srcdir@/common/doc/argp-common-hostranged-text.man>
.SH "REPORTING BUGS"
Report bugs to <@PACKAGE_BUGREPORT@>.
.SH COPYRIGHT
Copyright \(co 2003-2005 FreeIPMI Core Team
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty.
