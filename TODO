AB's TODO list
==============
libfreeipmi:
------------
[HIGH PRIORITY]
  * Unified Driver Model (one interface for all in-band and out-of-band drivers)

[MEDIUM PRIORITY]
  * Missing IPMI commands.
  * Modify system boot priority table.

[LOW PRIORITY]
  * FRU Commands (SDR Repo does a similar job).
  * Command to Switch MUX between BMC and ttyS1

Al's TODO list
==============
ipmi 2.0:
---------
  * ipmiping - done
  * ipmipower - done
  * sol bmc config - done
  * sol payload access bmc config
      test
  * rmcpplus priv bmc config - done
  * security keys bmc config
      test

libfreeipmi:
------------
  * Different slave address than BMC as default (i.e. in fill_lan_msg_hdr)
  * fiid macros - make debugging better, many are useless right now
  * only make those symbols exportable that should be exportable
  * gcrypt: secure mem-buffers
  * gcrypt: thread issues
  * ipmi 2.0 commands
  * gcc 4.0 warnings test/fix
  * password 16 vs 20 bytes fix
    - also see errata
  * gcc 4.0 test/warning
  * int wraparound corner cases - fiid
    - uint32_t for max_field_len, but some funcs return int32_t
    - counters, fiid_obj_create
  * test bad seq nums
  * need to test
    - acpi
    - ssif
    - pef config
  * missing cmds
    - lan-cmds 
    - msg-support-cmds
    - chassis-cmds
    - serial-cmds
    - sol-cmds
    - pef-cmds
    - sdr-repo-cmds
    - sel-cmds
    - sdr-record-types
    - sel record-types
    - sensor-cmds
  * template raw for all raw functions
    - begininning with tmpl_lan_raw
  * get event messages function that is passed fiids
  * lan ctx interface?
  * len -> length
    - fiid?
  * template "tagging" mechanism to make template compares faster
  * allow configuration of the slave addr into lan_msg_hdr??
  * assemble_raw, unassemble_raw
    - then using these, adjust udm-raw
  * 1_5_privilege_level - not really right, do something else
  * obj_cmd -> obj_data, b/c payloads aren't cmds (i.e. sol)
  * session hdrs (1.5 & 2.0) - handle NULL auth code through different API function

fish:
-----
  * Create makefile wrappers to allow fish to work locally in
    build directory rather that requiring installation.

ipmipower
---------
  * compile options to make workarounds automatic for ipmipower
  * ipmi 2.0
    - remove some wrappers? Especially dump functions?  No longer
      reasonable to assume should pass successfully b/c of wackiness of ipmi
      2.0 packets?
  * chassis_status -> get_chassis_status

General:
--------
  * sel aggregator

Autoconf/Portability
--------------------
  * socklet_t, doesn't exist on all OSes.
  * stdarg.h, other OSes use varargs.h
  * bittypes.h and inttypes.h for u_int32_t, etc.
         
Bala's TODO List:
=================
  * lan based sensors, sel and bmc-info
  * bmc-config --auto-configure
  * sensors will be simplified with Scheme <DONE>
  * dual fiid for ipmi_kcs_lan_set_auth_type_enables
  * convert ipmi-sensors, ipmi-sel, bmc-config to C based tools rather
    than Scheme based tools

Ian's TODO List:
================
  * Convert fish to the (now preferred) scm_ interface completely.
  * Event Messaging and PEF Subsystem.

Later on:
=========
  * Host monitoring support: Ganglia integration.
  * Additional libfreeipmi examples.
  * Code auditing
    - Templates/API/etc: Some say "username" some have "user_name".
    - Lots of functions don't check input parameters, i.e. null buffers
