doc
---
list interpret oem data mobos

inband
------
--fail-if-ipmi-not-detected
and build option??
inband flag - discover vs. not-discover on locate

general
-------
forwarded command support (errata 35b)

bmc-device
--------
set bmc global enables
- really should be done by firmware?  or OS distro?  Hold off for now.
set system info support
- really should be done by firmware?  or OS distro?  Hold off for now.

ipmiconsole
-----------
Handle SOL Activating asynchronous cmd
- like deactivating flag apparently

ipmi-locate
-----------
(TEST) ensure no breakage on itanium, dell, sun machine for acpi/spmi

entity ids
-----------
0x41, 0x42, are "identical" to other entries
- should map them together for entity-id-names output in sensors?

hostrange
---------
exclude hosts option
- not really necessary in FreeIPMI?  in pdsh, the reason you really
  need this is because you can do -a (all) or -g (genders
  attribute/netgroups attribute).
if user inputs hostname of localhost, do inband not outofband?

ipmi-sel
--------
- head/tail on record counts
- clear records, not delete-all?

freeipmi tools
--------------
config via environment variables too - like config file
ipmi-oem-config
- to deal with config OEM stuff config tool style?
- consider maybe down the road
- inventec mac/shared nic stuff
  - no, oem specific and will reboot BMC

libfreeipmi
-----------
* how to support xRC4 (can we? should we? does any vendor support this?)
* HMAC-SHA-256

config
------
config file - support workarounds/etc. for heterogenous cluster?

ipmi-fru
--------
(TEST) multirecord stuff against a FRU

bmc-config
----------
(TEST) that ipmi 2.0 (> 20 char) password not possible on ipmi 1.5 only mobo
destination address vlan tags (or would be in ipmi-pef-config?)
all lan destination config (or would be in ipmi-pef-config?)
(NEVER TESTED) bmc password threshold

ipmi-oem
--------
dell powermonitor status, clear cumulativepower, clear peakpower,
powersupplyrating, powerconsumption, powerconsumptionhistory
<watt|btuphr>, getpowerbudget, setpowerbudget
<val><watt|btuphr|percent>, enablepowercap, disablepowercap
inventec user disable

sensors/monitoring
------------------
(TEST) make sure bridging still works w/ sensor-read lib
(TEST) make sure oem still outputs fine
specify sensors by name too
- useful in libipmimonitoring, if heterogenous firmware versions, but
same sensor names?

ipmi-chassis-config
-------------------
* conf.5 manpage
(NEVER TESTED) panel button config - need hardware w/ this
(NEVER TESTED) device instance selector

general
-------
beginning doc for developers
event handling
-x option for excluding hosts??
perl extensions
- api support?
- raw support?
python extensions
- api support?
- raw support?
firmware firewall support?
- new config tool??
read/store username/password/k_g out of file encrypted so it's not sitting there in the clear
configure alternate port - i.e. don't use port 623?
- under current IPMI spec, completely not compliant/possible
IPv6
- not possible under current IPMI spec
- develop based on assumption someone's BMC can read IPv6 mapped IPv4 addresses?
- assume OEM extensions to configure IPv6 addresses?
have funcs that return buflen return ssize_t?, input should be size_t and void *? like read(), write()?
config file support per host.
i.e. workarounds FOO nodes[0-100]

bmc-device
--------
(NEVER TESTED) get auxiliary log status - not tested, don't have a machine with this support
(TEST) ensure get-lan-statistics and clear-lan-statistics still work

ipmi-pef-config
-----------
* conf.5 manpage

inband code
-----------
retry/resend code?

ipmi-sensors-config
-------------------
* conf.5 manpage
* instructions for each section??

ipmb
----
(NEVER TESTED) ipmi 2.0 bridging
(NEVER TESTED) openipmi ipmb

libs
----
merge all libs into one?  would aid debian packaging.
- make package layout simpler?
- make .so-naming consistent?
- merge all except libipmidetect?

contribs
--------
module for snmptrapd to parse ipmi traps
zenoss
- request from someone

oem-isms
--------
what OEM vendors can add
- bmc-info - device specific info
- ipmi-oem - any oemi-sms
- ipmi-dcmi - oem exception actions
- ipmi-fru/fru-parse - oem fru specifics
- ipmi-sel/sel-parse - oem sel specifics
- ipmi-sensors/ipmi-sensors-config/ipmimonitoring/sensor-read/libipmimonitoring - oem sensor specifics

DCMI functionality
------------------
(NEVER TESTED) capability info > revision 1
(NEVER TESTED) everything else

ipmi proxy daemon
-----------------
capture lan and do inband, maybe useful if you have dedicated port
that can't be seen by the network, and you don't have enough switch
ports to have both plugged up to the network.

PmBus functionality
-------------------
pmbus.org
- doable via FreeIPMI?  Can pass through Smbus to PmBus to do power control monitoring?

RELEASE TODOS - Do on every release
-----------------------------------
Email freeipmi-users && freeipmi-devel
Email info-gnu@gnu.org
Update savannah announcements
Update freshmeat.net
Update freeipmi webpage
Update opendesktop.org page
Update ohloh page
Update to softpedia??
Update fsf directory info.
Upload to ftp.zresearch.com
Upload to ftp.gnu.org

info-gnu@gnu.org template e-mail 

FreeIPMI X.X.X has been released. It can be downloaded at:

http://www.gnu.org/software/freeipmi/download.html

What is IPMI?

The Intelligent Platform Management Interface (IPMI) specification
defines a set of interfaces for platform management.  It is
implemented by a large number of hardware manufacturers to support
system management on motherboards. The features of IPMI that most
users will be interested in are sensor monitoring (i.e. CPU
temperatures, fan speeds), remote power control, and serial-over-LAN
(SOL).

What is FreeIPMI?

FreeIPMI provides in-band and out-of-band IPMI software based on the
IPMI v1.5/2.0 specification.  FreeIPMI provides tools and libraries
for users to access and read IPMI sensor readings, system event log
(SEL) entries, serial-over-LAN (SOL), remote power control functions,
field replaceable unit (FRU) device information, and more.  More
information about FreeIPMI can be found at the FreeIPMI webpage at:

http://www.gnu.org/software/freeipmi/index.html

Release X.X.X Changes
---------------------

To do this:

1. The file to be distributed (for example, foo.tar.gz).

2. Detached GPG binary signature for (1), (for example, foo.tar.gz.sig).

gpg -b foo.tar.gz

3. A clearsigned directive file, (for example, foo.tar.gz.directive.asc). 

Format is:

version: 1.1
directory: freeipmi
filename: freeipmi-0.X.X.tar.gz
comment: FreeIPMI 0.X.X

gpg --clearsign foo.tar.gz.directive

4. Upload the file(s) via anonymous ftp to ftp-upload.gnu.org. If the
upload is destined for ftp.gnu.org, place the file(s) in the
/incoming/ftp directory. If the upload is destined for alpha.gnu.org,
place the file(s) in the /incoming/alpha directory.

Uploads are processed every five minutes. Uploads that are in progress
while the upload processing script is running are handled properly, so
do not worry about the timing of your upload. Uploaded files that
belong to an incomplete triplet are deleted automatically after 24
hours.

Your designated upload email addresses (see Automated Upload
Registration) are sent a message if there are any problems processing
an upload for your package. You also receive a message when your
upload has been successfully processed.
