\."#############################################################################
\."$Id: ipmipower.8.in,v 1.23 2006-02-18 00:28:25 chu11 Exp $
\."#############################################################################
\."  Copyright (C) 2003 The Regents of the University of California.
\."  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
\."  Written by Albert Chu <chu11@llnl.gov>
\."  UCRL-CODE-155698
\."  
\."  This file is part of Ipmipower, a remote power control utility. 
\."  For details, see http://www.llnl.gov/linux/.
\."
\."  Ipmipower is free software; you can redistribute it and/or modify it under
\."  the terms of the GNU General Public License as published by the Free
\."  Software Foundation; either version 2 of the License, or (at your option)
\."  any later version.
\."  
\."  Ipmipower is distributed in the hope that it will be useful, but WITHOUT 
\."  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
\."  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
\."  for more details.
\."  
\."  You should have received a copy of the GNU General Public License along
\."  with Ipmipower; if not, write to the Free Software Foundation, Inc.,
\."  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
\."############################################################################
.TH ipmipower 8 "@ISODATE@" "ipmipower @PACKAGE_VERSION@" "System Commands"
.SH "NAME"
ipmipower \- IPMI power control utility
.SH "SYNOPSIS"
.B ipmipower
.I "[OPTIONS]"
.SH "DESCRIPTION"
.B ipmipower
allows users to remotely power on, off, cycle, hard reset, get a power
status query, perform a pulse diagnostic interrupt, or initiate a
soft-shutdown of the OS via ACPI through the IPMI over LAN protocol.
See IPMI over LAN below for more information on IPMI.

When a power command (--on, --off, --cycle, --reset, --stat, --pulse,
or --soft) is specified on the command line,
.B ipmipower 
will attempt to run the power command on all hostnames listed on the
command line then exit.

If no power commands are specified on the command line, 
.B ipmipower 
will run in interactive mode.  Interactive mode gives the user a
command line interface to enter various commands.  Details of the
interactive command line interface can be found below under
INTERACTIVE COMMANDS.

See EXAMPLES below for examples of how ipmipower is commonly used.

.SH "IPMI over LAN"
IPMI over LAN communicates with a remote machine by sending UDP
packets under IPv4 to the remote machine's Baseboard Management
Controller (BMC).  The BMC is typically communicated to through port
623 of the the onboard ethernet NIC on the motherboard.  At this point
in time,
.B ipmipower 
assumes all communication is done through port 623.

Before any IPMI over LAN communication can take place, the remote
machine's BMC must be configured properly.  Of primary importance, the
IP address, MAC address, subnet, usernames, passwords, privileges,
acceptable authentication types, and LAN enabled communication must be
configured on the BMC.  Most power control commands require a
privilege level of atleast OPERATOR.  The FreeIPMI tool
.B bmc-config(1) 
may be used to do this configuration.  A BMC configuration tool may
have also been distributed with the machine.

.SH "BASIC OPTIONS"
The following options are the most common options used with  
.B ipmipower.
.TP
.I "-h, --hostnames host1,host2,..."
Specify the list of remote hosts to be controlled by 
.B ipmipower.  
This option is required if a power command (--on, --off, --cycle,
--reset, --stat, --pulse, or --soft) is specified on the command line.
Hostnames may be specified in a range format; see HOST RANGES below.
.TP
.I "-u, --username name"
Sets the username to use when authenticating with the remote host.
The user must have OPERATOR or ADMINISTRATOR privilege to run the
--on, --off, --reset, --cycle, --pulse, or --soft power control
commands.  The user only needs USER privileges to determine the power
status of the machine through --stat.  If not specified, a null
(i.e. anonymous) username is assumed.
.TP
.I "-p, --password pw"
Sets the password to use when authenticating with the BMC.  If not
specified, a null password is assumed.
.TP
.I "-n, --on"
Power on the target hosts.
.TP
.I "-f, --off"
Power off the target hosts.
.TP
.I "-c, --cycle"
Power cycle the target hosts.
.TP
.I "-r, --reset"
Reset the target hosts.
.TP
.I "-s, --stat"
Get power status of the target hosts.
.TP
.I "-j, --pulse"
Send power diagnostic interrupt to target hosts.
.TP
.I "-k, --soft"
Initiate a soft-shutdown of the OS via ACPI.
.TP
.I "-H, --help"
Output help menu and exit.
.TP
.I "-V, --version"
Output version and exit.
.TP
.I "-C, --config file"
Specify alternate configuration file.
.LP
.SH "ADVANCED OPTIONS"
The following advanced options are used to change the default behavior
of 
.B ipmipower.
.TP
.I "-a, --authtype str"
Sets the authentication type to use with 
.B ipmipower.  
The currently available authentication types are "auto", "none",
"straight_password_key", "md2", and "md5".  If not specified, 
.B ipmipower
uses "auto" authentication, which will automatically select the most
secure authentication mechanism available from the remote machine.
.TP
.I "-l, --privilege str"
Sets the privilege type to use with 
.B ipmipower.  
The currently available privilege types are "auto", "user",
"operator", and "admin".  If not specified,
.B ipmipower
uses "auto", which will automatically select the minimal privilege
required for the power control operation selected.  Atleast the
"operator" is required for --on, --off, --cycle, --reset, --pulse, or
--soft.  The "user" privilege is sufficient for --stat.
.TP
.I "-g, --on-if-off"
The IPMI specification does not require the power cycle or hard reset
commands to turn on a machine that is currently powered off.  This
option will force
.B ipmipower 
to issue a power on command instead of a power cycle or hard reset
command if the remote machine's power is currently off.
.TP
.I "-o, --outputtype str"
Sets the output type to use with 
.B ipmipower.  
The currently available output types are "none", "newline", and
"hostrange".  If not specified, 
.B ipmipower 
uses newline output.  Hostrange output can be used to shorten output if
the number of nodes being power controlled is quite large.  However,
hostrange output will only output after all machines have completed
their power control operation.
.TP
.I "-P, --force-permsg-auth"
Forces 
.B ipmipower
to use IPMI per message authentication regardless of what is
advertised by the remote machine.  This option has been specifically
implemented to get around a compliance issue.  For more information,
see WORKAROUNDS below.
.TP
.I "-S, --accept-session-id-zero"
Forces 
.B ipmipower
to accept packets with a session id of zero.  This option has been
specifically implemented to get around a compliance issue.  For more
information, see WORKAROUNDS below.
.TP
.I "-U, --check-unexpected-authcode"
Forces 
.B ipmipower
to check packet authcodes even if no authcode should be received.
This option has been specifically implemented to get around a
compliance issue.  For more information, see WORKAROUNDS below.
.if @WITH_DEBUG@ \{
.TP
.I "-D, --debug"
Turn on debugging output.
.TP
.I "-I, --ipmidump"
Turn on IPMI packet dump output. Warning, the dump output can get
extremely long.
.TP
.I "-R, --rmcpdump"
Turn on RMCP packet dump output.  Warning, the dump output can get 
extremely long.
.TP
.I "-L, --log"
Turn on logging.  Default logfile is /tmp/ipmipower.PID, where PID is
the current process id.
.TP
.I "-F, --logfile"
Change current logfile.
\}
.LP
.SH "NETWORK OPTIONS"
The following options are used to change the behavior of
.B ipmipower's 
network behavior.
.TP
.I "-t, --timeout ms"
Sets the timeout in milliseconds.  
.B Ipmipower 
uses the timeout value to determine when to give up on a power control
command.  If not specified, a default timeout of 20000 milliseconds
(20 seconds) is used.
.TP
.I "-y, --retry-timeout ms"
Sets the retry-timeout in milliseconds.  IPMI over LAN requires a
series of packets to be sent back and forth to a remote host BMC.
When a response to any individual packet is not received after
retry-timeout milliseconds,
.B ipmipower
will retry sending that packet.  If not specified, packet
retransmissions will occur after 400 milliseconds (0.4 seconds).  The
value "ms" must be less than the timeout length specified with
--timeout.  Packet retransmissions can be disabled by setting the
retry-timeout length to 0.

Note how this option differs from the "--timeout" option above.  The
"--timeout" option refers to the entire amount of time the IPMI
protocol has to complete a power control operation.  The
"--retry-timeout" option refers to the amount of time any individual
packet within the IPMI protocol has to complete.
.TP
.I "-b, --retry-backoff-count num"
After every retry-backoff-count retransmissions, 
.B ipmipower 
will increase the retry-timeout length by another factor for the
duration of the current power control operation.  This is done to
reduce network traffic and allow BMC buffers to empty.  If not
specified, retry-backoff-count is 8.  Retransmission backoff can be
disabled by setting the retry backoff count to 0.
.TP
.I "-i, --ping-interval ms"
.TP
.I "-z, --ping-timeout ms"
When running in interactive mode, 
.B ipmipower 
will send RMCP (Remote Management Control Protocol) ping discovery
messages every ping-interval milliseconds to discover all remote hosts
and confirm its support of IPMI.  Power comamnds cannot be sent to a
host until it is discovered (or possibly re-discovered).  A remote
host is considered undiscovered if the host does not respond to RMCP
ping messages within ping-timeout milliseconds.  When a host is
considered undiscovered, power control commands will not be sent to
it.  If not specified, ping-interval is 5000 milliseconds (5 seconds)
and ping-timeout is 30000 milliseconds (30 seconds).  Ping discovery
requests can be disabled by setting the ping interval to 0.  If ping
discovery messages are disabled, power commands will be attempted
without knowledge of the host's existence or its support of IPMI.  The
value of ping-interval must be less than the ping-timeout length.
RMCP ping discovery messages are automatically disabled in
non-interactive mode.
.TP
.I "-v, --ping-packet-count num"
.TP
.I "-w, --ping-percent num"
Since IPMI is based off of a UDP protocol, it is difficult for
.B ipmipower
to distinguish between a missing machine and a bad network connection
when running in interactive mode.  For example, suppose a link
consistently drops 80% of the packets to a particular machine.  The
power control operation may have difficulty completing, although a
recent pong response from RMCP makes
.B ipmipower 
believe the machine is up and functioning properly.  

The --ping-packet-count and --ping-percent options are used to
alleviate this problem.
.B Ipmipower 
will monitor RMCP ping packets in ping-packet-count chunks.  If
.B ipmipower 
does not receive a response to greater than ping-percent of those
packets,
.B ipmipower 
will assume the link to this node is bad and will not send power
control operations to that node until the connection is determined to
be reliable.  If not specified, ping-packet-count is 10 and
ping-percent is 50.  This heuristic can be disabled by setting either
ping-packet-count or ping-percent to 0.  This feature is not used if
ping-interval is set to 0.  Note that the --ping-percent option takes
an integer as an argument, not a decimal.
.TP
.I "-x, --ping-consec-count num"
Ping-consec-count is another heuristic used to determine if a node
should be considered discovered, undiscovered, or with a bad
connection.  If a valid RMCP pong response was received for the last
ping-consec-count RMCP ping packets, a node will be considered
discovered, regardless if ping-packet-count and ping-percent
statistically consider the link to be unreliable.  If not specified,
ping-consec-count is 5.  This feature can be disabled by setting
ping-consec-count to 0.  This feature is not used if ping-interval,
--ping-packet-count, or --ping-percent are set to 0.
.LP
.SH "ERROR HANDLING"
.B ipmipower
logs errors to the syslog LOG_DAEMON facility.
.LP
.SH "INTERACTIVE COMMANDS"
.B ipmipower
provides the following interactive commands at the ipmipower> prompt.
Before any power commands (on, off, cycle, reset, stat, pulse, or
soft) can be used, hostnames must be configured into
.B ipmipower, 
either through the command prompt or the hostnames command below.
.TP
.I "hostnames [str]"
specify a new set of hosts, no str to unconfigure all hosts
.TP
.I "username [str]"
specify a new username, no str for null username
.TP
.I "password [str]"
specify a new password, no str for null password
.TP
.I "on [host]"
turns on all hosts, or only the specified host.
.TP
.I "off [host]"
turns off all hosts, or only the specified host.
.TP
.I "cycle [host]"
power cycle all hosts, or specified host.
.TP
.I "reset [host]"
hard reset all hosts or specified host.
.TP
.I "stat [host]"
queries power status for all hosts, or only the specified host.
.TP
.I "pulse [host]"
send pulse diagnostic interrupt to all hosts, or only the specified host.
.TP
.I "soft [host]"
Initiate a soft-shutdown of the OS via ACPI to all hosts, or only the specified host.
.TP
.I help
output help menu
.TP
.I advanced
output advanced help menu
.TP
.I network
output network help menu
.TP
.I "quit"
quit
.B ipmipower.
.TP
.I "authtype str"
specify a new authentication type, auto, none, straight_password_key, md2, or md5.
.TP
.I "privilege str"
specify a new privilege type, auto, user, operator or admin.
.I "on-if-off [on|off]"
toggle on-if-off functionality.
.TP
.I "outputtype str"
specify a new output type, none, newline, or hostrange.
.I "force-permsg-auth [on|off]"
toggle force-permsg-auth functionality.
.I "accept-session-id-zero [on|off]"
toggle accept-session-id-zero functionality.
.I "check-unexpected-authcode [on|off]"
toggle check-unexpected-authcode functionality.
.TP
.I "force
.if @WITH_DEBUG@ \{
.TP
.I "debug [on|off]"
toggle debug output
.TP
.I "ipmidump [on|off]"
toggle IPMI dump output
.TP
.I "rmcpdump [on|off]"
toggle RMCP dump output
.TP
.I "log [on|off]"
toggle logging output
.TP
.I "logfile [str]"
specify a new log file, no str for default
\}
.TP
.I "config"
output the current configuration 
.TP
.I "timeout ms"
specify a new timeout length
.TP
.I "retry-timeout ms"
specify a new retry timeout length
.TP
.I "retry-backoff-count num"
specify a new retry backoff count
.TP
.I "ping-interval ms"
specify a new ping interval length
.TP
.I "ping-timeout ms"
specify a new ping timeout length
.TP
.I "ping-packet-count num"
specify a new ping packet count
.TP
.I "ping-percent num"
specify a new ping percent
.TP
.I "ping-consec-count num"
specify a new ping consec count
.SH "HOST RANGES"
As noted above, 
.B ipmipower
accepts a range of hostnames in the general form: prefix[n-m,l-k,...],
where n < m and l < k, etc., as an alternative to explicit comma
seperated lists of hosts.  This form should not be confused with
regular expression character classes (also denoted by []). For
example, foo[19] does not represent foo1 or foo9, but rather
represents a degenerate range: foo19.
.LP
This range syntax is meant only as a convenience on clusters with a
prefixNN naming convention and specification of ranges should not be
considered necessary -- the list foo1,foo9 could be specified as such,
or by the range foo[1,9].
.LP
Some examples of range usage follow:
.nf
    foo[01-05] instead of foo01,foo02,foo03,foo04,foo05
    foo[7,9-10] instead of foo7,foo9,foo10
    foo[0-3] instead of foo0,foo1,foo2,foo3
.fi
.LP
As a reminder to the reader, some shells will interpret brackets ([
and ]) for pattern matching.  Depending on your shell, it may be
necessary to enclose ranged lists within quotes.
.SH "EXAMPLES"
.LP
Determine the power status of foo[0-2] with null username and password
        ipmipower -h foo[0-2] --stat
.LP
Determine the power status of foo[0-2] with non-null username and password
        ipmipower -h foo[0-2] -u foo -p bar --stat
.LP
Hard reset nodes foo[0-2] with non-null username and password
        ipmipower -h foo[0-2] -u foo -p bar --reset
.LP
Hard reset the nodes configured in a configuration file
        ipmipower -C /etc/powerctrl.conf --reset

.SH "USE WITH POWERMAN"
The 
.B powerman
device configuration file 
.I ipmipower.dev
supplied with
.B powerman
1.0.20 and beyond can be used to control one or more instances of
.B ipmipower
in coprocess mode.
 
Due to deficiences within powerman, the power control operations --on,
--off, --cycle, --reset will be reported as successful, despite any
errors that may occur.  The user should use the --query option to
ensure that all remote hosts were successfully powered on or off.

It is recommend that the --on-if-off option be used with
.B ipmipower
when it is used in conjunction with powerman.  This will ensure
.B ipmipower
behaves similarly to other powerman devices.

.SH "CLUSTER FOCUS"
.B Ipmipower 
has been developed to be especially useful for power controlling
clusters; however, it may still be used to power control just one
machine at a time.

When used on a cluster,
.B ipmipower 
is programmed so that the time it takes to power control the cluster
is the time it takes to power control the slowest node.  This is
accomplished by parallelizing the establishment of IPMI sessions and
the transmission of the actual power control command.  Remote machine
discovery is also implemented so that time is not wasted trying to
power control machines taken out of the cluster for servicing. When
used in conjunction with powerman,
.B ipmipower 
has been used to consistently power control a 1024-node cluster in
under 0.5 s.

.SH "WORKAROUNDS"
As can be expected, with so many different vendors implementing their
own IPMI solutions, different vendors may implement their IPMI
protocols slightly differently.  The following lists the handful of
compliance issues discovered and the workarounds currently used in 
.B ipmipower. 

When possible, the workarounds have been implemented so they will be
transparent to the user.  However, some will require command line
options be set due to issues with code logic or security.  The
workarounds listed below are listed in the order of their
implementation.  Therefore, workarounds implemented earlier may have
solved problems for other vendors.

Note that the following only indicates the hardware that a problem was
discovered on.  Newer versions of a vendors firmware may fix the
problems indicated below.  Similar machines from vendors may or may
not exhibit the same problems.

Intel SR870BN4: BMCs would not respond to retransmissions of a Get
Session Challenge Request if a previous Get Session Challenge response
was lost.  Resolved by sending retransmitted Get Session Challenge
requests from a different source port.

Tyan S2882 with m3289 BMC: After the IPMI session is brought up,
packet responses return empty session IDs to the client.  In order to
work around this issue, the -S (--accept-session-id-zero) option must
be set.  The option will allow empty session IDs to be accepted by the
client.  This problem is apparently fixed in later firmware releases.

Dell PowerEdge 2850: When Per-Message Authentication is disabled,
packet responses contain non-null authentication data (when it should
in fact be null).  In order to work around this issue, the -U
(--check-unexpected-authcode) option must be set.  The option will
allow unexpected non-null authcodes to be checked as though they were
expected. (Bug also discovered on Dell PowerEdge SC1425)

Intel SE7520JR2 with National Semiconductor PC87431M mBMC: The
activate session response and close session response packets have
invalid sequence numbers.  Specific workaround no longer required in
later revisions of 
.B ipmipower.

IBM eServer 325: The remote BMC will advertise that Per Message
Authentication is disabled, but actually require it for the protocol.
In order to work around this issue, the -P (--force-permsg-auth)
option must be set.  The option will force Per Message Authentication
to be used no matter what is advertised by the remote BMC.

.SH "TROUBLESHOOTING"
Most often, problems with ipmipower involve a misconfiguration of the
remote machine's BMC.  Double check to make sure the following are
configured properly in the remote machine's BMC: IP address, MAC
address, subnet mask, username(s), password(s), allowed authentication
type(s), atleast OPERATOR privilege level for one user, enabled LAN
activity.

When powering on a powered off machine, the client must have a means
by which to resolve the MAC address of the remote machine's ethernet
card.  This is typically done in one of two ways.

1) The first method requires enabling gratuitous ARPs on the remote
machine.  The remote machine will send out a gratuitous ARP, which
logically advertises the ethernet IP and MAC address so that other
machines on the network can cache the IP to MAC address mapping in
their local ARP cache.  For large clusters, this method is not
recommended since gratuitous ARPs can flood the network with
unnecessary traffic.

2) The second method is to permanently store the remote machine's MAC
address in the local ARP cache.  This is the more common approach.

Other methods are listed in the IPMI specification.

If 
.B ipmipower 
is running a tad slow when running a power control command on the
commandline (compared to running a power control command in
interactive mode), hostname IP resolution may be slowing the startup
code down.  Hostname resolution tuning may help make
.B ipmipower 
execute faster on the commandline.  This performance problem should
not matter when running in interactive mode or with
.B powerman, 
since it is a one-time setup cost.

If 
.B ipmipower
attempts are constantly timing out, increasing the retry timeout to
a few seconds may help.  Some remote BMCs are considerably slower
than others.

.SH "KNOWN ISSUES"
In order to prevent brute force attacks, some BMCs will "lock up"
after a number of username, password, or privilege errors.  There is
no known way to cleanly deal with a "locked up" BMC.  The best option
is to simply wait "awhile".

On certain operating systems, if you input your username and password
on the command line, the username and password may be discovered by
other users when using the
.B ps(1) 
command or looking in the /proc file system.  The most secure solution
is to enter the username and password while in interactive mode.  If
administrators do not wish to type in their username and password at
the interactive prompt, they can be listed in a configuration file, in
which the access to this file can be limited.

IPMI specifications do not require BMCs to perform a power control
operation before returning a completion code to the caller.
Therefore, it is possible for
.B ipmipower 
to return power status queries opposite of what you are expecting.
For example, if a "power off" operation is performed, a BMC may return
a successful completion code to
.B ipmipower
before the "power off" operation is actually performed.  Subsequent
power status queries may return "on" for several seconds, until the
BMC actually performs the "power off" operation.

.if @WITH_DEBUG@ \{

This version of ipmipower was compiled with debugging.  When compiled
with debugging,
.B ipmipower 
is insecure.  The following were intentionally
left in
.B ipmipower
for debugging purposes:

.IP o 2
Command line arguments are not cleared from memory.
.IP o
Core dumps are enabled.
.IP o
Error messages are not ambiguously returned to the user.  For example,
in a debug compiled binary, username and password errors are returned
with specific username or password error messages.  In a non-debug
compiled binary, a generic "Permission Denied" message is output under
both circumstances.
.IP o
In interactive mode, "config" and "password" commands will output
the current password to stdout.
.IP o
Configuration info such as username and password can be output to the
log file.

Before placing ipmipower in a production system, it is recommended
that the program be compiled with debugging turned off.
\}
.SH "ORIGIN"
Developed by Albert Chu <chu11@llnl.gov> on LLNL's GNU/Linux clusters.
This software is open source and distributed under the terms of the
Gnu GPL.
.SH "SEE ALSO"
bmc-config(1), ipmipower.conf(5)
