\input texinfo @c -*-texinfo-*-
@c This file uses the @command command introduced in Texinfo 4.0.
@c %**start of header
@setfilename freeipmi.info
@settitle The GNU FreeIPMI User's Guide
@finalout
@c %**end of header

@include version-doc.texi

@dircategory Platform Management
@direntry
* GNU FreeIPMI: (freeipmi).  GNU FreeIPMI User's Guide 
@end direntry

@ifinfo
Copyright @copyright{} 2002-2004 FreeIPMI Core Team.

@include permissions.texi
@end ifinfo

@titlepage
@title GNU FreeIPMI User's Guide
@subtitle Free Intelligent Platform Management System
@subtitle Version @value{VERSION} updated on @today{}
@author by Anand Babu @email{ab@@gnu.org.in}

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2004 FreeIPMI Core Team

@include permissions.texi
@end titlepage

@node Top, Introduction, (dir), (dir)
@ifinfo
User's Guide for @strong{GNU FreeIPMI} platform management system.

This edition of the documentation was last updated on @today{} for
release @value{VERSION} of the GNU FreeIPMI.
@end ifinfo

@c Output the table of contents at the beginning.
@shortcontents
@contents

@c All the menus can be updated with the EMACS command
@c texinfo-all-menus-update, which is normally bound to C-c C-u C-a.
@menu
* Introduction::                Introduction to the GNU FreeIPMI system.
* Installation::                Installing the software.
* libfreeipmi::                 High-level C library for @acronym{IPMI}
* ipmi-locate::                 @acronym{IPMI} device probing tool.
* fish::                        FreeIPMI SHell.
* bmc-config::                  Baseboard Management Controller configurator.
* bmc-info::                    Baseboard Management Controller information.
* bmc-autoconfig::              Wizard-like frontend for bmc-config.
* ipmi-raw::                    executes @acronym{IPMI} commands by hex values.
* ipmi-sensors::                @acronym{IPMI} sensors utility.
* ipmi-sel::                    @acronym{IPMI} System Event Log.
* bmc-watchdog::                Watchdog daemon.
* ipmipower::                   @acronym{IPMI} power control utility.
* ipmiping::                    @acronym{IPMI} ping reachability test utility.
* rmcpping::                    RMCP ping reachability test utility.
* Trouble-shooting::            Trouble-shooting tips.
* Contact us::                  Contact Information.
* Authors::                     FreeIPMI core team members.
* Copying::                     GNU FreeIPMI is a Free Software.
* Glossary::                    Conventions and terminologies. 
* Concept Index::               Index of concepts.
* Program Index::               Index of programs.
@end menu

@node Introduction, Installation, Top, Top
@chapter Introduction to the GNU FreeIPMI system
@cindex Introduction to the GNU FreeIPMI system

GNU FreeIPMI is a Free Intelligent Platform Management System Software.
It provides ``Remote-Console'' (out-of-band), ``System Management
Software'' (in-band) and a development library confirming to
Intelligent  Platform Management Interface (@acronym{IPMI} v1.5) standards. 

GNU FreeIPMI User's Guide concentrates installation, usage,
troubleshooting and bug reporting.  It corresponds to @value{VERSION}
release. 

@menu
* Intended Audience::           Who should read this guide?.
* About IPMI::                  Platform Management Standard.
@end menu

@node Intended Audience, About IPMI, Introduction, Introduction
@section Who should read this guide?
If you want to use the @emph{Intelligent Platform Management Interface}
functionalities available on modern motherboards running GNU or any
POSIX compliant operating systems, this guide is right for you.

@c The internals of GNU FreeIPMI system including how to hack,
@c extend or porting to new platforms are documented in a separate manual
@c called @inforef{Top, GNU FreeIPMI Hackers Guide, freeipmi-hg}@.

@node About IPMI,  , Intended Audience, Introduction
@section @acronym{IPMI} - Platform Management Standard

The @acronym{IPMI} specifications define standardized, abstracted interfaces to
the platform management subsystem.  @acronym{IPMI} includes the definition of
interfaces for extending platform management between board within the
main chassis, and between multiple chassis.

The term platform management is used to refer to the monitoring and
control functions that are built in to the platform hardware and
primarily used for the purpose of monitoring the health of the system
hardware.  This typically includes monitoring elements such as system
temperatures, voltages, fans, power supplies, bus errors, system
physical security, etc.  It includes automatic and manually driven
recovery capabilities such as local or remote system resets and power
on/off operations.  It includes the logging of abnormal or out-of-range
conditions for later examination and alerting where the platform
issues the alert without aid of run-time software.  Lastly it includes
inventory information that can help identify a failed hardware unit.

@node Installation, libfreeipmi, Introduction, Top
@chapter Installing GNU FreeIPMI
You can obtain copies of source, binary, documentation and other
useful information from the
@uref{http://www.gnu.org/software/freeipmi, GNU FreeIPMI Home Page}@.

@menu
* Dependencies::                Dependent run-time and libraries.
* Build::                       Compile and install from the source.
* Test Fire::                   Test fire your installation.
@end menu

@node Dependencies, Build, Installation, Installation
@section Dependencies
GNU FreeIPMI is designed to have minimum dependencies on other
libraries and tools.  FreeIPMI Shell alone depends on GNU Guile and GNU
Readline for the convenience of extension, scripting and GNU Bash like
user interface.  libfreeipmi library has virtually no dependencies at
all.  

List of dependencies under Debian GNU/Linux:
@itemize @bullet
@item GNU Guile    - guile-1.6, guile-1.6-dev
@item GNU Readline - libreadline4, libreadline4-dev
@end itemize

@cindex Guile
@cindex Readline

List of dependencies under Fedora or RedHat GNU/Linux:
@itemize @bullet
@item GNU Guile    - guile-1.6.x, guile-devel-1.6.x.
@item GNU Readline - readline-4.x, readline-devel-4.x
@end itemize

List of dependencies under FreeBSD:
@itemize @bullet
@item FreeBSD (tested on FreeBSD 5.3-BETA7) - @*
You will need "options SYSVSEM" in your kernel config or sysvsem.ko
module loaded. On FreeBSD > 5.2.1 You will also need "device io" in
kernel or loaded as module unless You specify USE_IOPERM compilation
option (see note on i386_set_ioperm below).

@item guile library (tested with guile-1.6.4_6) - ports/lang/guile
@item argp library (tested with argp-standalone-1.3) -
ports/devel/argp-standalone. 
@item gmake
@end itemize

@node Build, Test Fire, Dependencies, Installation
@section Building the source package.

To compile the program, you must first run the @command{configure}
script included with the source tar ball.  It works just like any other
standard GNU @command{autoconf} created script.  See the more generic
configure related installation instructions below.

For complete list of options, try @command{configure --help}@.

Note: Please run @command{./autogen.sh} script before
@command{./configure}, if you are compiling FreeIPMI source from CVS.

@cindex ./configure

@example
 # ./configure --prefix=/usr
 # make
 # make install
@end example

@subsection Installing under FreeBSD:

Example:
@example
  tar xzvf freeipmi-0.1.3.tar.gz
  cd freeipmi-0.1.3
  env CFLAGS="-I/usr/local/include" \
    LDFLAGS="-L/usr/local/lib -largp" \
    ./configure
  gmake all
  # su to root
  gmake install
  mkdir -p /var/lib/freeipmi
  chmod 0700 /var/lib/freeipmi
  touch /var/lib/freeipmi/ipckey
@end example

@subsubsection Using i386_set_ioperm(2) instead of io(4) under FreeBSD:
i386_set_ioperm has known issues on FreeBSD 5.x (bus errors
on io port access), so this patch uses io(4) to access io ports by default.
To enable using i386_set_ioperm instead of io(4) specify USE_IOPERM
copmilation option at configure time:

Example:
@example
    env CFLAGS="-DUSE_IOPERM -I/usr/local/include" \
      LDFLAGS="-L/usr/local/lib -largp" \
      ./configure
@end example

@node Test Fire,  , Build, Installation
@section Test Fire
GNU FreeIPMI works both in-band (with-in the system) and out-of-band
(over the network).  Easiest way to test if your system has @acronym{IPMI}
support or if the installation is OK is through @command{bmc-info}
command.

Test if @acronym{IPMI} works:
@example
ipmitest:~# bmc-info
Device ID:         20
Device Revision:   1
                   [SDR Support]
Firmware Revision: 1.32
                   [Device Available (normal operation)]
IPMI Version:      1.5
Additional Device Support:
                   [Sensor Device]
                   [SDR Repository Device]
                   [SEL Device]
                   [FRU Inventory Device]
                   [IPMB Event Receiver]
                   [Chassis Device]
Manufacturer ID:   B000157h
Product ID:        1Bh
Aux Firmware Revision Info: 10011500h
Channel Information:
       Channel No: 0
      Medium Type: IPMB (I2C)
    Protocol Type: IPMB-1.0
       Channel No: 1
      Medium Type: Asynch. Serial/Modem (RS-232)
    Protocol Type: IPMB-1.0
       Channel No: 3
      Medium Type: PCI SMBus
    Protocol Type: IPMI-SMBus
       Channel No: 4
      Medium Type: System Interface (KCS, SMIC, or BT)
    Protocol Type: KCS
       Channel No: 6
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
       Channel No: 7
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
ipmitest:~# 
@end example

If you don't get the expected response from @command{bmc-info} command,
please refer to @ref{Trouble-shooting}@.

@node libfreeipmi, ipmi-locate, Installation, Top
@chapter @acronym{IPMI} C library (libfreeipmi)
@pindex libfreeipmi

The Core of GNU FreeIPMI system consists of LAN, KCS, SMIC system
interface device drivers, all packaged in a single portable C
library.  Management applications can access the BMC at various levels 
using higher level @acronym{IPMI} command APIs or raw read/write interface to
the driver. 

Library internally uses SM BIOS and PCI drivers to locate the system
interfaces. 

You should note that all the device drivers are completely written in
user-space.  If you already have any in-kernel @acronym{IPMI} drivers loaded,
unload them before you launch any GNU FreeIPMI utility.  Otherwise
there are no other prerequisites.

@c If you want to develop your own remote-console or
@c system-management-software or integrate @acronym{IPMI} functionality into your
@c software using C language interface, then you should refer to
@c @ref{Top, GNU FreeIPMI Hackers Guide, freeipmi-hg}@. 

@node ipmi-locate, fish, libfreeipmi, Top
@chapter @acronym{ipmi-locate} IPMI device probing tool
@pindex ipmi-locate
@command{ipmi-locate} tool tries to probe and display
@acronym{KCS}/@acronym{SMIC}/@acronym{BT}/@acronym{SSIF}
@acronym{IPMI} device interface informations by using various probing
techniques.  The tool also displays default values of @acronym{IPMI}
device interfaces of most commonly used in @acronym{BMC}
manufacturers.  This tool may not probe on some machines, but FreeIPMI
tools work on them with default values.  This behavior has been seen
in Tyan motherboard with SMDC card.

@section Command-line options

@itemize @bullet
@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@section Example
@example
www:~# ipmi-locate 
Probing KCS device using SMBIOS... done
IPMI Version: 1.5
IPMI locate driver: SMBIOS
IPMI locate driver: 0
IPMI interface: KCS
BMC I2C device: (null)
BMC I/O base address: CA2
Register space: 1

Probing SMIC device using SMBIOS... FAILED

Probing BT device using SMBIOS... FAILED

Probing SSIF device using SMBIOS... FAILED

Probing KCS device using ACPI... FAILED

Probing SMIC device using ACPI... FAILED

Probing BT device using ACPI... FAILED

Probing SSIF device using ACPI... FAILED

Probing KCS device using PCI... FAILED

Probing SMIC device using PCI... FAILED

Probing BT device using PCI... FAILED

Probing SSIF device using PCI... FAILED

KCS device default values:
IPMI Version: 1.5
IPMI locate driver: DEFAULT
IPMI locate driver: 0
IPMI interface: KCS
BMC I2C device: (null)
BMC I/O base address: CA2
Register space: 1

SMIC device default values:
IPMI Version: 1.5
IPMI locate driver: DEFAULT
IPMI locate driver: 0
IPMI interface: SMIC
BMC I2C device: (null)
BMC I/O base address: CA9
Register space: 1

BT device default values:

SSIF device default values:
IPMI Version: 1.5
IPMI locate driver: DEFAULT
IPMI locate driver: 0
IPMI interface: SSIF
BMC I2C device: /dev/i2c-0
BMC SMBUS slave address: 20
Register space: 1

www:~# 
@end example

@node fish, bmc-config, ipmi-locate, Top
@chapter @acronym{FISH} FreeIPMI SHell
@cindex fish
@cindex FreeIPMI SHell
@pindex fish

Fish provides shell, extension/plug-in and scripting interface.  As a
shell, User has access to both in-band and out-of-band access to the
host BMC through a rich set of @acronym{IPMI} commands.

Experienced System Administrators can quickly add features or
limitlessly customize the system using the extension interface in
Scheme language.  For example, Pushing System Event Log data to a MySQL
server, Triggering alarm upon Platform Chassis Intrusion, Generating
email for critical platform events like processor temperature above
threshold limit or fan failure or memory errors@enddots{}  In fact, most of
the functionalities and commands of this shell are themselves
implemented through Fish extensions. 

@c GNU FreeIPMI User's Guide only gives a overview of @command{fish}@.  To
@c master @command{fish} scripting and extension, please refer to  
@c @ref{Top, GNU FreeIPMI Hackers Guide, freeipmi-hg}@.

@menu
* fish options::                Command-line arguments to fish.
* fish configuration file::     Sample configuration file.
* Invoking fish::               Different ways to invoke fish.
@end menu

@node fish options, fish configuration file, fish, fish
@section Command-line arguments to fish
@cindex fish options

@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -s, ---script-file=@var{SCRIPT-FILE} @*
      Load and execute given SCRIPT-FILE.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@node fish configuration file, Invoking fish, fish options, fish
@section Setting default startup options
@cindex fish.scm

Fish can be customized to great extent using Scheme language
interface.  You should refer to @ref{Top, The Guile Reference Manual,
guile} for advanced options. 

Example configuration file: @file{/usr/etc/fish/fish.scm}
@lisp
;; fish.scm: default fish configuration scm

;; Customize Fish:
(fi-set-prompt! "fish# ")

;; Set driver SMS IO Base port
; (fi-set-sms-io-base! #x0CA2)

;; Set Driver Internals:
; (fi-set-default-driver-poll-interval 10)

;; Example Group Aliases
; (set! sensors-group-alias-list
;   '(
;     (mysystem . (Processor Fan "Power Supply" Current Memory Chassis))
;     (power . ("Power Supply"))
;     (security . ("Platform Chassis Intrusion Platform Security Violation"))
;     ))
@end lisp

@node Invoking fish,  , fish configuration file, fish
@section Invoking fish

@subsection fish as shell
Fish takes (GNU getopt-long style) command-line arguments and starts
as a shell by default with a neat readline interface.  You can type
@command{fish} commands at the prompt.  Type @option{--help} to get
help on list of available commands and @option{quit} to exit the
shell.

@example
www:~# fish 
FreeIPMI Shell [fish-0.2.beta1]
Copyright (C) 2003-2005 FreeIPMI Core Team
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty.
fish# help sensors 
sensors [--no-probing] [--driver-type=IPMIDRIVER]
        [--driver-address=DRIVERADDR] [--driver-device=DEVICE]
        [--hostname=IPMIHOST] [--username=USERNAME]
        [--password=PASSWORD] [--auth-type=AUTHTYPE]
        [--priv-level=PRIVILEGE-LEVEL] [--verbose] [--sdr-info]
        [--flush-cache] [--list-groups] [--all] [--group=GROUP]
        [--sensors=SENSORS-LIST] [--help] [--usage] [--version]

        Displays current readings of sensor chips through BMC.
fish# quit 
www:~# 
@end example

@subsection Fish as script interpreter
To start fish as a script interpreter, you can either include script
header or invoke with @command{fish} with
@option{--script-file=SCRIPT-FILE} option.

@cindex /usr/sbin/fish

Example @command{fish} self executable script:
@lisp
#! /usr/sbin/fish -s
!#
(bmc-info-main (fi-command-line))
(display "bmc-info exited with [")
(display bmc-info-exit-status)
(display "] status\n")
(fi-exit bmc-info-exit-status)
@end lisp

Example invoking through command-line:
@example
debian-ia64:~# fish --script-file=/root/work/fish-examples/bmc-info.scm
Device ID:         20
Device Revision:   1
                   [SDR Support]
Firmware Revision: 1.32
                   [Device Available (normal operation)]
IPMI Version:      1.5
Additional Device Support:
                   [Sensor Device]
                   [SDR Repository Device]
                   [SEL Device]
                   [FRU Inventory Device]
                   [IPMB Event Receiver]
                   [Chassis Device]
Manufacturer ID:   B000157h
Product ID:        1Bh
Aux Firmware Revision Info: 10011500h
Channel Information:
       Channel No: 0
      Medium Type: IPMB (I2C)
    Protocol Type: IPMB-1.0
       Channel No: 1
      Medium Type: Asynch. Serial/Modem (RS-232)
    Protocol Type: IPMB-1.0
       Channel No: 3
      Medium Type: PCI SMBus
    Protocol Type: IPMI-SMBus
       Channel No: 4
      Medium Type: System Interface (KCS, SMIC, or BT)
    Protocol Type: KCS
       Channel No: 6
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
       Channel No: 7
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
bmc-info exited with 0 status
debian-ia64:~#
@end example

@subsection Fish extensions
@cindex Extensions

Fish extensions are like normal Scheme programming with additional
built-in @acronym{IPMI} primitives and procedures.  You should refer to 
@ref{Top, The Guile Reference Manual, guile} to learn more about
writing extensions.

Example @command{fish} extension:
This simple extension upon loading, will dynamically add
@command{bmc-info} command to the @command{fish} shell.

@lisp
;;
;; bmc-info.scm: fish extension to get BMC information.
;;
(define (bmc-info args)
  "Show BMC information"
  (fi-kcs-get-dev-id-display))
(fi-register-command! '("bmc-info" "bmc-info\n\t- Show BMC Information."))
@end lisp

Example: Loading the above @file{bmc-info.scm} extension.
@example 
fish# load /root/work/fish-examples/bmc-info.scm
fish# help bmc-info
bmc-info
        Shows BMC Information.
fish#
@end example

@node bmc-config, bmc-info, fish, Top
@chapter bmc-config
@pindex bmc-config
A command line BMC configuration utility.  You can view, set and
replicate the configuration.

@menu
* Options::                     Command-line arguments to bmc-config.
* Sample Configuration File::   Sample Configuration File.
* BMC checkout::                Extracting current BMC configuration.
* BMC commit::                  Update BMC configuration.
* Diff configuration::          Compare BMC configuration.
* bmc-config known issues::     Known issues with the bmc-config.
@end menu

@node Options, Sample Configuration File, bmc-config, bmc-config
@section Command-line arguments to bmc-config

@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -o, ---checkout @*
      Get BMC configuration.

@item -i, ---commit @*
      Update BMC configuration.

@item -d, ---diff @*
      Show configuration differences with BMC.

@item -f, ---filename=@var{FILENAME} @*
      Use FILENAME in checkout, commit or diff.

@item -k, ---key-pair=@var{KEY-PAIR} @*
      Use KEY-PAIR in commit or diff.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -v, ---verbose @*
      Print detailed information.

@item -V, ---version @*
      Print program version.
@end itemize

@node Sample Configuration File, BMC checkout, Options, bmc-config
@section Sample Configuration File
@command{bmc-config} emits current BMC configuration settings to
stdout in the same format as that of configuration file, when no file
argument is specified.

@cindex bmc-config configuration file 

Example: Extracting BMC configuration to stdout.
@example
debian-ia64:~# bmc-config --checkout 
Section User1
	## Give username
	Username                                     Anonymous
	## Give password or leave it blank to clear password
	Password                                     
	## Possible values: Yes/No
	Lan_Enable_Ipmi_Msgs                         Yes
	## Possible values: Yes/No
	Lan_Enable_Link_Auth                         Yes
	## Possible values: Yes/No
	Lan_Enable_Restrict_To_Callback              No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Lan_Privilege_Limit                          User
	## Give valid number
	Lan_Session_Limit                            0
	## Possible values: Yes/No
	Serial_Enable_Ipmi_Msgs                      Yes
	## Possible values: Yes/No
	Serial_Enable_Link_Auth                      Yes
	## Possible values: Yes/No
	Serial_Enable_Restrict_To_Callback           No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Serial_Privilege_Limit                       User
	## Give valid number
	Serial_Session_Limit                         0
EndSection
Section User2
	## Give username
	Username                                     ipmiuser
	## Give password or leave it blank to clear password
	Password                                     
	## Possible values: Yes/No
	Lan_Enable_Ipmi_Msgs                         Yes
	## Possible values: Yes/No
	Lan_Enable_Link_Auth                         Yes
	## Possible values: Yes/No
	Lan_Enable_Restrict_To_Callback              No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Lan_Privilege_Limit                          Administrator
	## Give valid number
	Lan_Session_Limit                            0
	## Possible values: Yes/No
	Serial_Enable_Ipmi_Msgs                      No
	## Possible values: Yes/No
	Serial_Enable_Link_Auth                      No
	## Possible values: Yes/No
	Serial_Enable_Restrict_To_Callback           No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Serial_Privilege_Limit                       No_Access
	## Give valid number
	Serial_Session_Limit                         0
EndSection
Section User3
	## Give username
	Username                                     operator
	## Give password or leave it blank to clear password
	Password                                     
	## Possible values: Yes/No
	Lan_Enable_Ipmi_Msgs                         No
	## Possible values: Yes/No
	Lan_Enable_Link_Auth                         No
	## Possible values: Yes/No
	Lan_Enable_Restrict_To_Callback              No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Lan_Privilege_Limit                          No_Access
	## Give valid number
	Lan_Session_Limit                            0
	## Possible values: Yes/No
	Serial_Enable_Ipmi_Msgs                      No
	## Possible values: Yes/No
	Serial_Enable_Link_Auth                      No
	## Possible values: Yes/No
	Serial_Enable_Restrict_To_Callback           No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Serial_Privilege_Limit                       No_Access
	## Give valid number
	Serial_Session_Limit                         0
EndSection
Section User4
	## Give username
	Username                                     user
	## Give password or leave it blank to clear password
	Password                                     
	## Possible values: Yes/No
	Lan_Enable_Ipmi_Msgs                         No
	## Possible values: Yes/No
	Lan_Enable_Link_Auth                         No
	## Possible values: Yes/No
	Lan_Enable_Restrict_To_Callback              No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Lan_Privilege_Limit                          No_Access
	## Give valid number
	Lan_Session_Limit                            0
	## Possible values: Yes/No
	Serial_Enable_Ipmi_Msgs                      No
	## Possible values: Yes/No
	Serial_Enable_Link_Auth                      No
	## Possible values: Yes/No
	Serial_Enable_Restrict_To_Callback           No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Serial_Privilege_Limit                       No_Access
	## Give valid number
	Serial_Session_Limit                         0
EndSection
Section LAN_Channel
	## Possible values: Disabled/Pre_Boot_Only/Always_Available/Shared
	Volatile_Access_Mode                         Always_Available
	## Possible values: Yes/No
	Volatile_Enable_User_Level_Auth              Yes
	## Possible values: Yes/No
	Volatile_Enable_Per_Message_Auth             No
	## Possible values: Yes/No
	Volatile_Enable_Pef_Alerting                 No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Volatile_Channel_Privilege_Limit             User
	## Possible values: Disabled/Pre_Boot_Only/Always_Available/Shared
	Non_Volatile_Access_Mode                     Always_Available
	## Possible values: Yes/No
	Non_Volatile_Enable_User_Level_Auth          Yes
	## Possible values: Yes/No
	Non_Volatile_Enable_Per_Message_Auth         No
	## Possible values: Yes/No
	Non_Volatile_Enable_Pef_Alerting             No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Non_Volatile_Channel_Privilege_Limit         User
EndSection
Section LAN_Conf
	## Possible values: Unspecified/Static/Use_DHCP/Use_BIOS/Use_Others
	Ip_Address_Source                            Static
	## Give valid IP Address
	Ip_Address                                   192.168.1.60
	## Give valid MAC Address
	Mac_Address                                  00:0E:0C:21:81:B4
	## Give valid Subnet mask
	Subnet_Mask                                  255.255.255.0
	## Give valid IP Address
	Default_Gateway_Ip_Address                   192.168.1.1
	## Give valid MAC Address
	Default_Gateway_Mac_Address                  00:00:00:00:00:00
	## Give valid IP Address
	Backup_Gateway_Ip_Address                    192.168.1.1
	## Give valid MAC Address
	Backup_Gateway_Mac_Address                   00:00:00:00:00:00
EndSection
Section LAN_Conf_Auth
	## Possible values: Yes/No
	Callback_Enable_Auth_Type_None               No
	## Possible values: Yes/No
	Callback_Enable_Auth_Type_Md2                Yes
	## Possible values: Yes/No
	Callback_Enable_Auth_Type_Md5                Yes
	## Possible values: Yes/No
	Callback_Enable_Auth_Type_Straight_Password  Yes
	## Possible values: Yes/No
	Callback_Enable_Auth_Type_Oem_Proprietary    No
	## Possible values: Yes/No
	User_Enable_Auth_Type_None                   No
	## Possible values: Yes/No
	User_Enable_Auth_Type_Md2                    Yes
	## Possible values: Yes/No
	User_Enable_Auth_Type_Md5                    Yes
	## Possible values: Yes/No
	User_Enable_Auth_Type_Straight_Password      Yes
	## Possible values: Yes/No
	User_Enable_Auth_Type_Oem_Proprietary        No
	## Possible values: Yes/No
	Operator_Enable_Auth_Type_None               No
	## Possible values: Yes/No
	Operator_Enable_Auth_Type_Md2                Yes
	## Possible values: Yes/No
	Operator_Enable_Auth_Type_Md5                Yes
	## Possible values: Yes/No
	Operator_Enable_Auth_Type_Straight_Password  Yes
	## Possible values: Yes/No
	Operator_Enable_Auth_Type_Oem_Proprietary    No
	## Possible values: Yes/No
	Admin_Enable_Auth_Type_None                  No
	## Possible values: Yes/No
	Admin_Enable_Auth_Type_Md2                   Yes
	## Possible values: Yes/No
	Admin_Enable_Auth_Type_Md5                   Yes
	## Possible values: Yes/No
	Admin_Enable_Auth_Type_Straight_Password     Yes
	## Possible values: Yes/No
	Admin_Enable_Auth_Type_Oem_Proprietary       No
	## Possible values: Yes/No
	Oem_Enable_Auth_Type_None                    No
	## Possible values: Yes/No
	Oem_Enable_Auth_Type_Md2                     No
	## Possible values: Yes/No
	Oem_Enable_Auth_Type_Md5                     No
	## Possible values: Yes/No
	Oem_Enable_Auth_Type_Straight_Password       No
	## Possible values: Yes/No
	Oem_Enable_Auth_Type_Oem_Proprietary         No
EndSection
Section LAN_Conf_Misc
	## Possible values: Yes/No
	Enable_Gratuitous_Arps                       Yes
	## Possible values: Yes/No
	Enable_Arp_Response                          No
	## Give valid number
	Gratuitous_Arp_Interval                      4
EndSection
Section Serial_Channel
	## Possible values: Disabled/Pre_Boot_Only/Always_Available/Shared
	Volatile_Access_Mode                         Always_Available
	## Possible values: Yes/No
	Volatile_Enable_User_Level_Auth              Yes
	## Possible values: Yes/No
	Volatile_Enable_Per_Message_Auth             No
	## Possible values: Yes/No
	Volatile_Enable_Pef_Alerting                 No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Volatile_Channel_Privilege_Limit             User
	## Possible values: Disabled/Pre_Boot_Only/Always_Available/Shared
	Non_Volatile_Access_Mode                     Always_Available
	## Possible values: Yes/No
	Non_Volatile_Enable_User_Level_Auth          Yes
	## Possible values: Yes/No
	Non_Volatile_Enable_Per_Message_Auth         No
	## Possible values: Yes/No
	Non_Volatile_Enable_Pef_Alerting             No
	## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
	Non_Volatile_Channel_Privilege_Limit         User
EndSection
Section Serial_Conf
	## Possible values: Yes/No
	Enable_Basic_Mode                            Yes
	## Possible values: Yes/No
	Enable_Ppp_Mode                              Yes
	## Possible values: Yes/No
	Enable_Terminal_Mode                         No
	## Possible Values: Modem_Connect/Direct_Connect
	Connect_Mode                                 Direct_Connect
	## Give valid number
	Page_Blackout_Interval                       0
	## Give valid number
	Call_Retry_Time                              60
	## Possible values: Yes/No
	Enable_Dtr_Hangup                            Yes
	## Possible values: No_Flow_Control/RTS_CTS/XON_XOFF
	Flow_Control                                 No_Flow_Control
	## Possible values: 9600/19200/38400/57600/115200
	Bit_Rate                                     115200
EndSection
Section Misc
	## Possible Values: Off_State_AC_Apply/Restore_State_AC_Apply/On_State_AC_Apply
	Power_Restore_Policy                         Restore_State_Ac_Apply
EndSection
debian-ia64:~#
@end example

@node BMC checkout, BMC commit, Sample Configuration File, bmc-config
@section Extracting current BMC configuration
`checkout'' option generates a configuration file containing
the current BMC settings.  Configuration file is in plain text format
with sections enclosing key-value pairs.  Comments will guide you to
choose appropriate values.  Use your favorite editor (like GNU Emacs)
to edit these fields.  Comment character is @samp{#}@.

Example: Creating a BMC configuration file.
@example
debian-ia64:~# bmc-config --checkout --filename=/tmp/bmc.conf
@end example

Alternatively you can redirect stdout to the configuration file too.
@example
debian-ia64:~# bmc-config --checkout > /tmp/bmc.conf
@end example

@node BMC commit, Diff configuration, BMC checkout, bmc-config
@section Update BMC configuration
After customizing the BMC configuration file, you can update the
BMC configuration using ``commit'' option.

Example using configuration file:
@example
debian-ia64:~# bmc-config --commit -f /tmp/bmc.conf
@end example

Example using a specific key:
@example
debian-ia64:~# bmc-config --commit -k "LAN_conf:Ip_Address=192.168.1.60"
@end example

Note: At this point of time, configuration settings can only be fed
through a file or key-value pairs and not stdin.

@node Diff configuration, bmc-config known issues, BMC commit, bmc-config
@section Compare BMC configuration

To compare the differences between current active BMC settings and the
configuration file, use ``diff'' option

Example: Comparing the configuration file and BMC settings.
@example
debian-ia64:~# bmc-config --diff -f /tmp/bmc.conf
USER:Ip_Address=192.168.10.160
BMC :Ip_Address=192.168.1.60 differs
USER:Default_Gateway_Ip_Address=192.168.10.1
BMC :Default_Gateway_Ip_Address=192.168.1.1 differs
USER:Backup_Gateway_Ip_Address=192.168.10.1
BMC :Backup_Gateway_Ip_Address=192.168.1.1 differs
debian-ia64:~# bmc-config --diff -k "User2:Username=guest"
USER:Username=guest
BMC :Username=ipmiuser differs
debian-ia64:~# 
@end example

@node bmc-config known issues,  , Diff configuration, bmc-config
@section bmc-config known issues
@command{bmc-config} checkout in out-of-band may fail to retrieve some
BMC configuration options, because of default USER privilege level.
For such cases, use ADMIN privilege level.

@node bmc-info, bmc-autoconfig, bmc-config, Top
@chapter bmc-info
@pindex bmc-info
@command{bmc-info} command displays BMC/@acronym{IPMI} version information and
the list of additional devices supported.  This command is mostly used
for checking if @acronym{IPMI} is supported or if BMC/FRU/SDR firmware upgrade
completed successfully.

@section Command-line options

@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@section Example
@example
ipmitest:~# bmc-info
Device ID:         20
Device Revision:   1
                   [SDR Support]
Firmware Revision: 1.32
                   [Device Available (normal operation)]
IPMI Version:      1.5
Additional Device Support:
                   [Sensor Device]
                   [SDR Repository Device]
                   [SEL Device]
                   [FRU Inventory Device]
                   [IPMB Event Receiver]
                   [Chassis Device]
Manufacturer ID:   B000157h
Product ID:        1Bh
Aux Firmware Revision Info: 10011500h
Channel Information:
       Channel No: 0
      Medium Type: IPMB (I2C)
    Protocol Type: IPMB-1.0
       Channel No: 1
      Medium Type: Asynch. Serial/Modem (RS-232)
    Protocol Type: IPMB-1.0
       Channel No: 3
      Medium Type: PCI SMBus
    Protocol Type: IPMI-SMBus
       Channel No: 4
      Medium Type: System Interface (KCS, SMIC, or BT)
    Protocol Type: KCS
       Channel No: 6
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
       Channel No: 7
      Medium Type: 802.3 LAN
    Protocol Type: IPMB-1.0
ipmitest:~# 
@end example

@node bmc-autoconfig, ipmi-raw, bmc-info, Top
@chapter bmc-autoconfig
@pindex bmc-autoconfig
@command{bmc-autoconfig} utility is a wizard-like frontend to the
@command{bmc-config} command, which has a curses/text based interfaced
questionaire asking for IP/Netmask/Gateway to be committed.

@section Command-line options

@itemize @bullet
@item -u, --usage @*
      Show short usage message.

@item -h, --help @*
      Show help.

@item -V, --version @*
      Show version information.
@end itemize

@node ipmi-raw, ipmi-sensors, bmc-autoconfig, Top
@chapter ipmi-raw
@pindex ipmi-raw
@command{ipmi-raw} tool reads hex values of @acronym{IPMI} command
request data from standard input, executes it and displays hex values
of @acronym{IPMI} command response data.  This tool works on in-band
and out-of-band.

@section Command-line options

@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@section Example
@example
www:~# ipmi-raw
18 01
rcvd: 1C 01 00 20 81 01 20 51 9F 57 01 00 1B 00 00 15 01 10 
www:~# 
@end example

@node ipmi-sensors, ipmi-sel, ipmi-raw, Top
@chapter ipmi-sensors
@pindex ipmi-sensors
@command{ipmi-sensors} utility reports the monitored system health
information, such as temperatures and voltages, fan status, etc with
nominal, threshold max/min readings and status descriptions.

@menu
* ipmi-sensors options::        Command-line arguments.
* ipmi-sensors configuration file::  Sample configuration file.
* ipmi-sensors examples::       Examples.
@end menu

@node ipmi-sensors options, ipmi-sensors configuration file, ipmi-sensors, ipmi-sensors
@section command-line arguments
@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -v, ---verbose @*
      Increase verbosity in output.  More -v more verbosity.

@item -i, ---sdr-info @*
      Show SDR Information.

@item -f, ---flush-cache @*
      Flush sensor cache.

@item -L, ---list-groups @*
      List sensor groups.

@item ---all @*
      Display all sensors (Ignore sensors ignore-list).

@item -g, ---group=@var{GROUP} @*
      Show sensors belongs to this GROUP.

@item -s, ---sensors=@var{SENSORS-LIST} @* 
      Show listed sensors.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@node ipmi-sensors configuration file, ipmi-sensors examples, ipmi-sensors options, ipmi-sensors
@section Setting default startup options

@cindex ipmi-sensors-conf.scm

Example ipmi-sensors-conf.scm file:
@lisp
;;; file: /usr/etc/fish/ipmi-sensors-conf.scm

;; ipmi-sensors-conf.scm: sensors configuration file

;; Sensors cache filename
; (set! sensors-sdr-cache-file "/path/to/cache-filename")

;; Example: Ignore these sensors
; (sensors-ignore! '(54 55 88))

;; Example: Group Aliases
(sensors-group-alias-list-append!
  '(
;    (mysystem . ("Processor" "Fan" "Power Supply" "Current Memory Chassis"))
    (power . ("Power Supply"))
    (security . ("Platform Chassis Intrusion" "Platform Security Violation"))
    ))
@end lisp

@node ipmi-sensors examples,  , ipmi-sensors configuration file, ipmi-sensors
@section ipmi-sensors in action

CDC 6440 (A.K.A SR870BN4) - a Quad Itanium2 system has 136 sensors on
board.  GNU FreeIPMI running on Thunder supercomputer monitors 139264
sensors in total.

@cindex Thunder
@cindex CDC 6440
@cindex SR870BN4

@subsection Sample ipmi-sensors output
@example
www:~# ipmi-sensors 
1: Power Unit (Power Unit): [OK]
2: BMC Watchdog (Watchdog 2): [OK]
3: Scrty Violation (Platform Security Violation): [OK]
4: Physical Scrty (Platform Chassis Intrusion): [LAN Leash Lost (system is unplugged from LAN)]
5: POST Error (System Firmware): [OK]
6: Critical Int (Critical Interrupt): [OK]
7: Memory (Memory): [OK]
8: Logging Disabled (Event Logging Disabled): [OK]
9: Baseboard 1.2V (Voltage): 1.2054 V (1.0682/1.3328): [OK]
10: Baseboard 1.25V (Voltage): 1.2642 V (1.0192/1.4896): [OK]
11: Baseboard 1.8V (Voltage): 1.7901 V (1.6029/1.9773): [OK]
12: Baseboard 1.8VSB (Voltage): 1.8135 V (1.6029/1.9773): [OK]
13: Baseboard 2.5V (Voltage): 2.5155 V (2.1645/2.8314): [OK]
14: Baseboard 3.3V (Voltage): 3.36 V (2.9925/3.64): [OK]
15: Baseboard 3.3AUX (Voltage): 3.3089 V (2.9232/3.6946): [OK]
16: Baseboard 5.0V (Voltage): 4.966 V (4.524/5.486): [OK]
17: Baseboard 5VSB (Voltage): 5.076 V (4.4415/5.6165): [OK]
18: Baseboard 12V (Voltage): 12.028 V (10.788/13.082): [OK]
19: Baseboard 12VRM (Voltage): 12.028 V (10.602/13.392): [OK]
20: Baseboard -12V (Voltage): -12.04 V (-13.84/-10.456): [OK]
21: Baseboard VBAT (Voltage): 3.069 V (2.6815/3.627): [OK]
22: Baseboard Temp (Temperature): 39.0 C (5.0/65.0): [OK]
23: FntPnl Amb Temp (Temperature): 22.0 C (5.0/45.0): [OK]
24: Basebrd FanBoost (OEM Reserved): 39.0 C (NA/NA): [OK]
25: FP Amb FanBoost (OEM Reserved): 22.0 C (NA/NA): [OK]
26: Baseboard Fan 1 (Fan): 5661.0 RPM (2703.0/NA): [OK]
27: Baseboard Fan 2 (Fan): 5661.0 RPM (2703.0/NA): [OK]
28: Baseboard Fan 3 (Fan): 5763.0 RPM (2703.0/NA): [OK]
29: Baseboard Fan 4 (Fan): 5559.0 RPM (2703.0/NA): [OK]
30: SCSI A Term Pwr (Voltage): 4.06 V (3.2/NA): [OK]
31: SCSI B Term Pwr (Voltage): 4.04 V (3.2/NA): [OK]
32: Power Supply 1 (Power Supply): [Presence detected]
33: Power Cage Fan (Fan): 6720.0 RPM (4500.0/NA): [OK]
34: Power Cage Temp (Temperature): 34.0 C (-10.0/65.0): [OK]
35: PwrCage FanBoost (OEM Reserved): 34.0 C (NA/NA): [OK]
36: Proc Missing (Board): [OK]
37: ACPI State (ACPI Power State): [S0/G0 "working"]
38: System Event (System Event): [OK]
39: Button (Button): [OK]
40: SMI Timeout (OEM Reserved): [OK]
41: Sensor Failure (OEM Reserved): [OEM State = 0000h]
42: NMI State (OEM Reserved): [OK]
43: SMI State (OEM Reserved): [OK]
44: FSB Mismatch (OEM Reserved): [OK]
45: Processor 1 Stat (Processor): [Processor Presence detected]
46: Processor 2 Stat (Processor): [Processor Presence detected]
47: Processor1 Temp (Temperature): 37.0 C (-10.0/80.0): [OK]
48: Processor2 Temp (Temperature): 39.0 C (-10.0/80.0): [OK]
49: Proc1 FanBoost (OEM Reserved): 37.0 C (NA/NA): [OK]
50: Proc2 FanBoost (OEM Reserved): 39.0 C (NA/NA): [OK]
51: Processor Vccp (Voltage): 1.4976 V (1.0296/1.9422): [OK]
52: CPU Therm Ctrl (Temperature): [State Deasserted]
53: DIMM 1B (Slot Connector): [Slot/Connector Device installed/attached]
54: DIMM 1A (Slot Connector): [Slot/Connector Device installed/attached]
55: DIMM 2B (Slot Connector): [OK]
56: DIMM 2A (Slot Connector): [OK]
57: DIMM 3B (Slot Connector): [OK]
58: DIMM 3A (Slot Connector): [OK]
59: Hot Swap Temp (Temperature): NA (NA/NA): [Unknown]
60: HSC Drv Status (Drive Slot): [Unknown]
61: HSC Drv Presence (Drive Slot): [Unknown]
www:~# 
@end example

@subsection Sample very-verbose output
@example
www:~# ipmi-sensors -vv
Record ID: 1
Record Type: 02h
Sensor Name: Power Unit
Group Name: Power Unit
Sensor Number: 1
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 2
Record Type: 02h
Sensor Name: BMC Watchdog
Group Name: Watchdog 2
Sensor Number: 3
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 3
Record Type: 02h
Sensor Name: Scrty Violation
Group Name: Platform Security Violation
Sensor Number: 4
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 4
Record Type: 02h
Sensor Name: Physical Scrty
Group Name: Platform Chassis Intrusion
Sensor Number: 5
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [LAN Leash Lost (system is unplugged from LAN)]

Record ID: 5
Record Type: 02h
Sensor Name: POST Error
Group Name: System Firmware
Sensor Number: 6
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 6
Record Type: 02h
Sensor Name: Critical Int
Group Name: Critical Interrupt
Sensor Number: 7
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 7
Record Type: 02h
Sensor Name: Memory
Group Name: Memory
Sensor Number: 8
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 8
Record Type: 02h
Sensor Name: Logging Disabled
Group Name: Event Logging Disabled
Sensor Number: 9
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 9
Record Type: 01h
Sensor Name: Baseboard 1.2V
Group Name: Voltage
Sensor Number: 16
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 98
R Exponent: -4
B Exponent: 2
Linear: 64
Analog Data Format: 0
Lower Critical Threshold: 1.0682 Volts
Upper Critical Threshold: 1.3328 Volts
Lower Non-Critical Threshold: 1.0976 Volts
Upper Non-Critical Threshold: 1.2936 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.499 Volts
Normal Min.: 1.1368 Volts
Normal Max.: 1.2544 Volts
Nominal reading: 1.1956 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 1.2054 Volts
Sensor Status: [OK]

Record ID: 10
Record Type: 01h
Sensor Name: Baseboard 1.25V
Group Name: Voltage
Sensor Number: 17
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 98
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 1.0192 Volts
Upper Critical Threshold: 1.4896 Volts
Lower Non-Critical Threshold: 1.0486 Volts
Upper Non-Critical Threshold: 1.4504 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.499 Volts
Normal Min.: 1.078 Volts
Normal Max.: 1.4112 Volts
Nominal reading: 1.2446 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 1.2642 Volts
Sensor Status: [OK]

Record ID: 11
Record Type: 01h
Sensor Name: Baseboard 1.8V
Group Name: Voltage
Sensor Number: 18
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 117
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 1.6029 Volts
Upper Critical Threshold: 1.9773 Volts
Lower Non-Critical Threshold: 1.6497 Volts
Upper Non-Critical Threshold: 1.9188 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.9835 Volts
Normal Min.: 1.6965 Volts
Normal Max.: 1.872 Volts
Nominal reading: 1.7901 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 1.7901 Volts
Sensor Status: [OK]

Record ID: 12
Record Type: 01h
Sensor Name: Baseboard 1.8VSB
Group Name: Voltage
Sensor Number: 19
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 117
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 1.6029 Volts
Upper Critical Threshold: 1.9773 Volts
Lower Non-Critical Threshold: 1.6497 Volts
Upper Non-Critical Threshold: 1.9188 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.9835 Volts
Normal Min.: 1.6965 Volts
Normal Max.: 1.872 Volts
Nominal reading: 1.7901 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 1.8135 Volts
Sensor Status: [OK]

Record ID: 13
Record Type: 01h
Sensor Name: Baseboard 2.5V
Group Name: Voltage
Sensor Number: 20
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 117
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2.1645 Volts
Upper Critical Threshold: 2.8314 Volts
Lower Non-Critical Threshold: 2.223 Volts
Upper Non-Critical Threshold: 2.7378 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.9835 Volts
Normal Min.: 2.2815 Volts
Normal Max.: 2.6793 Volts
Nominal reading: 2.4804 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 2.5155 Volts
Sensor Status: [OK]

Record ID: 14
Record Type: 01h
Sensor Name: Baseboard 3.3V
Group Name: Voltage
Sensor Number: 21
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 175
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2.9925 Volts
Upper Critical Threshold: 3.64 Volts
Lower Non-Critical Threshold: 3.08 Volts
Upper Non-Critical Threshold: 3.535 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 4.4625 Volts
Normal Min.: 3.15 Volts
Normal Max.: 3.4475 Volts
Nominal reading: 3.29 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 3.36 Volts
Sensor Status: [OK]

Record ID: 15
Record Type: 01h
Sensor Name: Baseboard 3.3AUX
Group Name: Voltage
Sensor Number: 22
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 203
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2.9232 Volts
Upper Critical Threshold: 3.6946 Volts
Lower Non-Critical Threshold: 3.0044 Volts
Upper Non-Critical Threshold: 3.5931 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 5.1765 Volts
Normal Min.: 3.1465 Volts
Normal Max.: 3.451 Volts
Nominal reading: 3.2886 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 3.3089 Volts
Sensor Status: [OK]

Record ID: 16
Record Type: 01h
Sensor Name: Baseboard 5.0V
Group Name: Voltage
Sensor Number: 23
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 26
R Exponent: -3
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 4.524 Volts
Upper Critical Threshold: 5.486 Volts
Lower Non-Critical Threshold: 4.68 Volts
Upper Non-Critical Threshold: 5.33 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 6.63 Volts
Normal Min.: 4.784 Volts
Normal Max.: 5.226 Volts
Nominal reading: 4.966 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 4.966 Volts
Sensor Status: [OK]

Record ID: 17
Record Type: 01h
Sensor Name: Baseboard 5VSB
Group Name: Voltage
Sensor Number: 24
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 235
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 4.4415 Volts
Upper Critical Threshold: 5.6165 Volts
Lower Non-Critical Threshold: 4.5825 Volts
Upper Non-Critical Threshold: 5.452 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 5.9925 Volts
Normal Min.: 4.794 Volts
Normal Max.: 5.2405 Volts
Nominal reading: 4.982 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 5.076 Volts
Sensor Status: [OK]

Record ID: 18
Record Type: 01h
Sensor Name: Baseboard 12V
Group Name: Voltage
Sensor Number: 25
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 62
R Exponent: -3
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 10.788 Volts
Upper Critical Threshold: 13.082 Volts
Lower Non-Critical Threshold: 11.16 Volts
Upper Non-Critical Threshold: 12.71 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 15.81 Volts
Normal Min.: 11.408 Volts
Normal Max.: 12.462 Volts
Nominal reading: 11.842 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 12.028 Volts
Sensor Status: [OK]

Record ID: 19
Record Type: 01h
Sensor Name: Baseboard 12VRM
Group Name: Voltage
Sensor Number: 26
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 62
R Exponent: -3
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 10.602 Volts
Upper Critical Threshold: 13.392 Volts
Lower Non-Critical Threshold: 10.912 Volts
Upper Non-Critical Threshold: 12.958 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 15.81 Volts
Normal Min.: 11.408 Volts
Normal Max.: 12.462 Volts
Nominal reading: 11.904 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 12.028 Volts
Sensor Status: [OK]

Record ID: 20
Record Type: 01h
Sensor Name: Baseboard -12V
Group Name: Voltage
Sensor Number: 27
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: -160
M: 72
R Exponent: -3
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: -13.84 Volts
Upper Critical Threshold: -10.456 Volts
Lower Non-Critical Threshold: -13.408 Volts
Upper Non-Critical Threshold: -10.744 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -16.0 Volts
Sensor Max. Reading: 2.36 Volts
Normal Min.: -12.616 Volts
Normal Max.: -10.96 Volts
Nominal reading: -12.04 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: -12.04 Volts
Sensor Status: [OK]

Record ID: 21
Record Type: 01h
Sensor Name: Baseboard VBAT
Group Name: Voltage
Sensor Number: 28
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 155
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2.6815 Volts
Upper Critical Threshold: 3.627 Volts
Lower Non-Critical Threshold: 2.759 Volts
Upper Non-Critical Threshold: 3.5185 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 3.9525 Volts
Normal Min.: 2.8365 Volts
Normal Max.: 3.441 Volts
Nominal reading: 2.976 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 3.069 Volts
Sensor Status: [OK]

Record ID: 22
Record Type: 01h
Sensor Name: Baseboard Temp
Group Name: Temperature
Sensor Number: 48
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: 5.0 Degrees C
Upper Critical Threshold: 65.0 Degrees C
Lower Non-Critical Threshold: 10.0 Degrees C
Upper Non-Critical Threshold: 60.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 10.0 Degrees C
Normal Max.: 55.0 Degrees C
Nominal reading: 38.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 39.0 Degrees C
Sensor Status: [OK]

Record ID: 23
Record Type: 01h
Sensor Name: FntPnl Amb Temp
Group Name: Temperature
Sensor Number: 50
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: 5.0 Degrees C
Upper Critical Threshold: 45.0 Degrees C
Lower Non-Critical Threshold: 10.0 Degrees C
Upper Non-Critical Threshold: 40.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 10.0 Degrees C
Normal Max.: 30.0 Degrees C
Nominal reading: 25.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 22.0 Degrees C
Sensor Status: [OK]

Record ID: 24
Record Type: 01h
Sensor Name: Basebrd FanBoost
Group Name: OEM Reserved
Sensor Number: 51
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: 60.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 55.0 Degrees C
Nominal reading: 38.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 39.0 Degrees C
Sensor Status: [OK]

Record ID: 25
Record Type: 01h
Sensor Name: FP Amb FanBoost
Group Name: OEM Reserved
Sensor Number: 54
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: 40.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 30.0 Degrees C
Nominal reading: 25.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 22.0 Degrees C
Sensor Status: [OK]

Record ID: 26
Record Type: 01h
Sensor Name: Baseboard Fan 1
Group Name: Fan
Sensor Number: 64
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 51
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2703.0 RPM
Upper Critical Threshold: NA
Lower Non-Critical Threshold: 2856.0 RPM
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 RPM
Sensor Max. Reading: 13005.0 RPM
Normal Min.: 4488.0 RPM
Normal Max.: 5610.0 RPM
Nominal reading: 4998.0 RPM
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 5661.0 RPM
Sensor Status: [OK]

Record ID: 27
Record Type: 01h
Sensor Name: Baseboard Fan 2
Group Name: Fan
Sensor Number: 65
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 51
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2703.0 RPM
Upper Critical Threshold: NA
Lower Non-Critical Threshold: 2856.0 RPM
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 RPM
Sensor Max. Reading: 13005.0 RPM
Normal Min.: 4488.0 RPM
Normal Max.: 5610.0 RPM
Nominal reading: 4998.0 RPM
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 5355.0 RPM
Sensor Status: [OK]

Record ID: 28
Record Type: 01h
Sensor Name: Baseboard Fan 3
Group Name: Fan
Sensor Number: 66
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 51
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2703.0 RPM
Upper Critical Threshold: NA
Lower Non-Critical Threshold: 2856.0 RPM
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 RPM
Sensor Max. Reading: 13005.0 RPM
Normal Min.: 4488.0 RPM
Normal Max.: 5610.0 RPM
Nominal reading: 4998.0 RPM
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 5661.0 RPM
Sensor Status: [OK]

Record ID: 29
Record Type: 01h
Sensor Name: Baseboard Fan 4
Group Name: Fan
Sensor Number: 67
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 51
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 2703.0 RPM
Upper Critical Threshold: NA
Lower Non-Critical Threshold: 2856.0 RPM
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 RPM
Sensor Max. Reading: 13005.0 RPM
Normal Min.: 4488.0 RPM
Normal Max.: 5610.0 RPM
Nominal reading: 4998.0 RPM
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 5559.0 RPM
Sensor Status: [OK]

Record ID: 30
Record Type: 01h
Sensor Name: SCSI A Term Pwr
Group Name: Voltage
Sensor Number: 96
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 20
R Exponent: -3
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 3.2 Volts
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 5.1 Volts
Normal Min.: 3.84 Volts
Normal Max.: 4.32 Volts
Nominal reading: 4.08 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 4.06 Volts
Sensor Status: [OK]

Record ID: 31
Record Type: 01h
Sensor Name: SCSI B Term Pwr
Group Name: Voltage
Sensor Number: 97
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 20
R Exponent: -3
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 3.2 Volts
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 5.1 Volts
Normal Min.: 3.84 Volts
Normal Max.: 4.32 Volts
Nominal reading: 4.08 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 4.04 Volts
Sensor Status: [OK]

Record ID: 32
Record Type: 02h
Sensor Name: Power Supply 1
Group Name: Power Supply
Sensor Number: 112
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Presence detected]

Record ID: 33
Record Type: 01h
Sensor Name: Power Cage Fan
Group Name: Fan
Sensor Number: 115
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 60
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 4500.0 RPM
Upper Critical Threshold: NA
Lower Non-Critical Threshold: 4980.0 RPM
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 RPM
Sensor Max. Reading: 15300.0 RPM
Normal Min.: 6000.0 RPM
Normal Max.: 9540.0 RPM
Nominal reading: 8220.0 RPM
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 6720.0 RPM
Sensor Status: [OK]

Record ID: 34
Record Type: 01h
Sensor Name: Power Cage Temp
Group Name: Temperature
Sensor Number: 118
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: -10.0 Degrees C
Upper Critical Threshold: 65.0 Degrees C
Lower Non-Critical Threshold: -1.0 Degrees C
Upper Non-Critical Threshold: 60.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 55.0 Degrees C
Nominal reading: 40.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 34.0 Degrees C
Sensor Status: [OK]

Record ID: 35
Record Type: 01h
Sensor Name: PwrCage FanBoost
Group Name: OEM Reserved
Sensor Number: 119
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: 60.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 55.0 Degrees C
Nominal reading: 40.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 34.0 Degrees C
Sensor Status: [OK]

Record ID: 36
Record Type: 02h
Sensor Name: Proc Missing
Group Name: Board
Sensor Number: 128
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 37
Record Type: 02h
Sensor Name: ACPI State
Group Name: ACPI Power State
Sensor Number: 130
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [S0/G0 "working"]

Record ID: 38
Record Type: 02h
Sensor Name: System Event
Group Name: System Event
Sensor Number: 131
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 39
Record Type: 02h
Sensor Name: Button
Group Name: Button
Sensor Number: 132
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 40
Record Type: 02h
Sensor Name: SMI Timeout
Group Name: OEM Reserved
Sensor Number: 133
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 41
Record Type: 02h
Sensor Name: Sensor Failure
Group Name: OEM Reserved
Sensor Number: 134
Slave Address/System Software ID: 10h
Event/Reading Type Code: 73h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OEM State = 0000h]

Record ID: 42
Record Type: 02h
Sensor Name: NMI State
Group Name: OEM Reserved
Sensor Number: 135
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 43
Record Type: 02h
Sensor Name: SMI State
Group Name: OEM Reserved
Sensor Number: 136
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 44
Record Type: 02h
Sensor Name: FSB Mismatch
Group Name: OEM Reserved
Sensor Number: 137
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 45
Record Type: 02h
Sensor Name: Processor 1 Stat
Group Name: Processor
Sensor Number: 144
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Processor Presence detected]

Record ID: 46
Record Type: 02h
Sensor Name: Processor 2 Stat
Group Name: Processor
Sensor Number: 145
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Processor Presence detected]

Record ID: 47
Record Type: 01h
Sensor Name: Processor1 Temp
Group Name: Temperature
Sensor Number: 152
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: -10.0 Degrees C
Upper Critical Threshold: 80.0 Degrees C
Lower Non-Critical Threshold: 0.0 Degrees C
Upper Non-Critical Threshold: 75.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 59.0 Degrees C
Nominal reading: 47.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 37.0 Degrees C
Sensor Status: [OK]

Record ID: 48
Record Type: 01h
Sensor Name: Processor2 Temp
Group Name: Temperature
Sensor Number: 153
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: -10.0 Degrees C
Upper Critical Threshold: 80.0 Degrees C
Lower Non-Critical Threshold: 0.0 Degrees C
Upper Non-Critical Threshold: 75.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 59.0 Degrees C
Nominal reading: 47.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 39.0 Degrees C
Sensor Status: [OK]

Record ID: 49
Record Type: 01h
Sensor Name: Proc1 FanBoost
Group Name: OEM Reserved
Sensor Number: 160
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: 75.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 59.0 Degrees C
Nominal reading: 47.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 37.0 Degrees C
Sensor Status: [OK]

Record ID: 50
Record Type: 01h
Sensor Name: Proc2 FanBoost
Group Name: OEM Reserved
Sensor Number: 161
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 2
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: 75.0 Degrees C
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 5.0 Degrees C
Normal Max.: 59.0 Degrees C
Nominal reading: 47.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 39.0 Degrees C
Sensor Status: [OK]

Record ID: 51
Record Type: 01h
Sensor Name: Processor Vccp
Group Name: Voltage
Sensor Number: 184
Event/Reading Type Code: 01h
Slave Address/System Software ID: 10h
B: 0
M: 117
R Exponent: -4
B Exponent: 2
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: 1.0296 Volts
Upper Critical Threshold: 1.9422 Volts
Lower Non-Critical Threshold: 1.0881 Volts
Upper Non-Critical Threshold: 1.8837 Volts
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: 0.0 Volts
Sensor Max. Reading: 2.9835 Volts
Normal Min.: 1.0881 Volts
Normal Max.: 1.8369 Volts
Nominal reading: 1.4859 Volts
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: 1.4976 Volts
Sensor Status: [OK]

Record ID: 52
Record Type: 02h
Sensor Name: CPU Therm Ctrl
Group Name: Temperature
Sensor Number: 192
Slave Address/System Software ID: 10h
Event/Reading Type Code: 03h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [State Deasserted]

Record ID: 53
Record Type: 02h
Sensor Name: DIMM 1B
Group Name: Slot Connector
Sensor Number: 224
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Slot/Connector Device installed/attached]

Record ID: 54
Record Type: 02h
Sensor Name: DIMM 1A
Group Name: Slot Connector
Sensor Number: 225
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Slot/Connector Device installed/attached]

Record ID: 55
Record Type: 02h
Sensor Name: DIMM 2B
Group Name: Slot Connector
Sensor Number: 226
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 56
Record Type: 02h
Sensor Name: DIMM 2A
Group Name: Slot Connector
Sensor Number: 227
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 57
Record Type: 02h
Sensor Name: DIMM 3B
Group Name: Slot Connector
Sensor Number: 228
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 58
Record Type: 02h
Sensor Name: DIMM 3A
Group Name: Slot Connector
Sensor Number: 229
Slave Address/System Software ID: 10h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [OK]

Record ID: 59
Record Type: 01h
Sensor Name: Hot Swap Temp
Group Name: Temperature
Sensor Number: 1
Event/Reading Type Code: 01h
Slave Address/System Software ID: 60h
B: -128
M: 1
R Exponent: 0
B Exponent: 0
Linear: 0
Analog Data Format: 0
Lower Critical Threshold: NA
Upper Critical Threshold: NA
Lower Non-Critical Threshold: NA
Upper Non-Critical Threshold: NA
Lower Non-Recoverable Threshold: NA
Upper Non-Recoverable Threshold: NA
Sensor Min. Reading: -128.0 Degrees C
Sensor Max. Reading: 127.0 Degrees C
Normal Min.: 15.0 Degrees C
Normal Max.: 40.0 Degrees C
Nominal reading: 30.0 Degrees C
Negative Hysteresis: 2
Positive Hysteresis: 2
Sensor Reading: NA
Sensor Status: [Unknown]

Record ID: 60
Record Type: 02h
Sensor Name: HSC Drv Status
Group Name: Drive Slot
Sensor Number: 2
Slave Address/System Software ID: 60h
Event/Reading Type Code: 6Fh
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Unknown]

Record ID: 61
Record Type: 02h
Sensor Name: HSC Drv Presence
Group Name: Drive Slot
Sensor Number: 9
Slave Address/System Software ID: 60h
Event/Reading Type Code: 08h
Negative Hysteresis: 0
Positive Hysteresis: 0
Sensor Status: [Unknown]

Record ID: 62
Record Type: 08h
Sensor Name: NONE
Container Entity ID: 15h
Container Entity Instance: 01h

Record ID: 63
Record Type: 11h
Device Name: AC Pwr Cage FRU
Device Type: 10h
Device Type Modifier: 00h
FRU Entity ID: 15h
FRU Entity Instance: 01h

Record ID: 64
Record Type: 11h
Device Name: Pwr Supply 1 FRU
Device Type: 10h
Device Type Modifier: 00h
FRU Entity ID: 0Ah
FRU Entity Instance: 01h

Record ID: 65
Record Type: 11h
Device Name: DIMM 1B SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 01h

Record ID: 66
Record Type: 11h
Device Name: DIMM 1A SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 02h

Record ID: 67
Record Type: 11h
Device Name: DIMM 2B SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 03h

Record ID: 68
Record Type: 11h
Device Name: DIMM 2A SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 04h

Record ID: 69
Record Type: 11h
Device Name: DIMM 3B SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 05h

Record ID: 70
Record Type: 11h
Device Name: DIMM 3A SPD
Device Type: 10h
Device Type Modifier: 01h
FRU Entity ID: 20h
FRU Entity Instance: 06h

Record ID: 71
Record Type: 12h
Device Name: Basbrd Mgmt Ctlr
Entity ID: 07h
Entity Instance: 01h

Record ID: 72
Record Type: 12h
Device Name: Hot Swap Ctlr
Entity ID: 0Fh
Entity Instance: 03h

Record ID: 73
Record Type: 12h
Device Name: Chs Bridge Ctlr
Entity ID: 07h
Entity Instance: 01h

Record ID: 74
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 02 02 00 00 70

Record ID: 75
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 03 FC FC FC

Record ID: 76
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 07 00 FC FC FC 01 01 00 98 01 01 0A 3E 00 99 01 01 0A 3E 00 32 00 00 10 00 12 15 13 16 15 17 18 18 1D 19 20 1A 24 1B 2A 1C 2E 1D 34 1E 39 1F 41 20 48 21 50 22 59 23 64

Record ID: 77
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 06 01

Record ID: 78
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 53 44 52 20 50 61 63 6B 61 67 65 20 35 2E 36 2E 42

Record ID: 79
Record Type: C0h
Sensor Name: NONE
Manufacturer ID: 157h
OEM Data: 53 44 52 20 46 69 6C 65 20 30 2E 43

www:~#
@end example

@node ipmi-sel, bmc-watchdog, ipmi-sensors, Top
@chapter ipmi-sel
@pindex ipmi-sel
BMC provides a centralized, non-volatile System Event Log and logs
system events and certain system configuration information to this
device. You can perform a postmortem analysis on a system even when a
the processor(s) are disabled because of a failure.  ipmi-sel utility helps
you view and manage system event log.

@menu
* ipmi-sel options::            Command-line arguments.
* ipmi-sel sample output::      
@end menu

@node ipmi-sel options, ipmi-sel sample output, ipmi-sel, ipmi-sel
@section command-line arguments

@itemize @bullet
@item ---no-probing @*
      Do not probe IPMI devices.

@item -D, ---driver-type=@var{IPMIDRIVER} @*
      Use this @var{IPMIDRIVER} instead of auto selection.  Allowed
      values are KCS, SMIC, SSIF and LAN.

@item ---driver-address=@var{DRIVERADDR} @*
      Use this @var{DRIVERADDR} address instead of probed one.

@item ---driver-device=@var{DEVICE} @*
      Use this @var{DEVICE} for IPMI driver.

@item -h, ---hostname=@var{IPMIHOST} @*
      Connect to @var{IPMIHOST}.

@item -u, ---username=@var{USERNAME} @*
      Use @var{USERNAME} instead of NULL.  Maximum USERNAME length is
      16.

@item -p, ---password=@var{PASSWORD} @*
      Use @var{PASSWORD} instead of NULL.  Maximum PASSWORD length is
      16.

@item -a, ---auth-type=@var{AUTHTYPE} @*
      Use @var{AUTHTYPE} instead of NONE.  Allowed values are NONE,
      MD2, MD5, PLAIN and OEM.

@item -l, ---priv-level=@var{PRIVILEGE-LEVEL} @*
      Use this @var{PRIVILEGE-LEVEL} instead of USER.  Allowed values
      are CALLBACK, USER, OPERATOR, ADMIN and OEM.

@item -i, ---info @*
      Show general information about SEL.

@item -d, ---delete=@var{REC-LIST} @*
      Delete given SEL records entry.

@item -c, ---delete-all @*
      Delete all SEL entries.

@item -x, ---hex-dump@var{=FILE} @*
      Hex-dump SEL entries optionally to @var{FILE}.

@item -?, ---help @*
      Give this help list.

@item ---usage @*
      Give a short usage message.

@item -V, ---version @*
      Print program version.
@end itemize

@node ipmi-sel sample output,  , ipmi-sel options, ipmi-sel
@section ipmi-sel sample output

@example
www:~# ipmi-sel 
4:11-Dec-2005 07:03:43:Event Logging Disabled #9:Log Area Reset/Cleared
24:11-Dec-2005 07:49:05:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
44:11-Dec-2005 07:50:02:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
64:11-Dec-2005 07:52:33:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
84:11-Dec-2005 07:57:04:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
104:11-Dec-2005 07:57:07:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
124:11-Dec-2005 07:57:07:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
144:31-Dec-1969 16:00:02:Power Unit #1:AC lost
164:31-Dec-1969 16:00:13:Power Supply #112:Presence detected
184:31-Dec-1969 16:00:15:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
204:31-Dec-1969 16:00:15:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
224:31-Dec-1969 16:00:44:System Event #131:Timestamp Clock Synch
244:11-Dec-2005 07:59:03:System Event #131:Timestamp Clock Synch
264:11-Dec-2005 07:59:59:System Event #131:OEM System Boot Event
284:11-Dec-2005 08:09:46:Platform Chassis Intrusion #5:General Chassis Intrusion
304:11-Dec-2005 08:27:06:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
324:11-Dec-2005 08:27:06:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
344:11-Dec-2005 08:27:39:System Event #131:Timestamp Clock Synch
364:11-Dec-2005 08:27:41:System Event #131:Timestamp Clock Synch
384:11-Dec-2005 08:28:02:Platform Chassis Intrusion #5:General Chassis Intrusion
404:11-Dec-2005 08:31:36:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
424:11-Dec-2005 08:31:36:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
444:11-Dec-2005 08:32:10:System Event #131:Timestamp Clock Synch
464:11-Dec-2005 08:32:10:System Event #131:Timestamp Clock Synch
484:11-Dec-2005 08:32:45:System Event #131:OEM System Boot Event
504:11-Dec-2005 08:36:10:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
524:11-Dec-2005 08:36:10:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
544:11-Dec-2005 08:36:32:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
564:11-Dec-2005 08:36:32:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
584:11-Dec-2005 08:36:54:System Event #131:System Reconfigured:OEM code = 01h
604:11-Dec-2005 08:37:09:System Event #131:Timestamp Clock Synch
624:12-Dec-2005 08:37:13:System Event #131:Timestamp Clock Synch
644:12-Dec-2005 08:40:28:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
664:12-Dec-2005 08:40:28:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
684:12-Dec-2005 08:41:05:System Event #131:Timestamp Clock Synch
704:12-Dec-2005 08:41:06:System Event #131:Timestamp Clock Synch
724:12-Dec-2005 08:42:20:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
744:12-Dec-2005 08:42:20:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
764:12-Dec-2005 08:42:56:System Event #131:Timestamp Clock Synch
784:12-Dec-2005 08:42:56:System Event #131:Timestamp Clock Synch
804:12-Dec-2005 08:43:33:System Event #131:OEM System Boot Event
824:12-Dec-2005 08:50:58:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
844:12-Dec-2005 08:50:58:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
864:12-Dec-2005 08:51:18:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
884:12-Dec-2005 08:51:35:System Event #131:Timestamp Clock Synch
904:12-Dec-2005 08:51:41:System Event #131:Timestamp Clock Synch
924:12-Dec-2005 08:51:43:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
944:12-Dec-2005 08:51:46:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
964:12-Dec-2005 08:51:46:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
984:12-Dec-2005 08:52:18:System Event #131:Timestamp Clock Synch
1004:12-Dec-2005 08:52:18:System Event #131:Timestamp Clock Synch
1024:12-Dec-2005 08:52:29:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1044:12-Dec-2005 08:54:00:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1064:12-Dec-2005 08:54:03:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
1084:12-Dec-2005 08:54:03:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
1104:12-Dec-2005 08:54:39:System Event #131:Timestamp Clock Synch
1124:12-Dec-2005 08:54:39:System Event #131:Timestamp Clock Synch
1144:12-Dec-2005 08:55:17:System Event #131:OEM System Boot Event
1164:12-Dec-2005 09:13:59:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
1184:12-Dec-2005 09:13:59:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
1204:12-Dec-2005 09:14:35:System Event #131:Timestamp Clock Synch
1224:12-Dec-2005 09:14:36:System Event #131:Timestamp Clock Synch
1244:12-Dec-2005 09:15:14:System Event #131:OEM System Boot Event
1264:31-Dec-1969 16:00:08:Power Supply #112:Presence detected
1284:31-Dec-1969 16:00:10:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 26h
1304:31-Dec-1969 16:00:10:Fan #68:Fan:Trigger reading = 00h:Trigger reading = 1Dh
1324:31-Dec-1969 16:01:32:Platform Chassis Intrusion #5:General Chassis Intrusion
1344:31-Dec-1969 16:00:08:Platform Chassis Intrusion #5:General Chassis Intrusion
1364:31-Dec-1969 16:00:08:Power Supply #112:Presence detected
1384:31-Dec-1969 16:00:07:Platform Chassis Intrusion #5:General Chassis Intrusion
1404:31-Dec-1969 16:00:08:Power Supply #112:Presence detected
1424:31-Dec-1969 16:00:02:Power Unit #1:AC lost
1444:31-Dec-1969 16:00:13:Power Supply #112:Presence detected
1464:31-Dec-1969 16:00:51:System Event #131:Timestamp Clock Synch
1484:12-Dec-2005 09:26:13:System Event #131:Timestamp Clock Synch
1504:12-Dec-2005 09:27:12:System Event #131:OEM System Boot Event
1524:12-Dec-2005 10:06:36:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1544:12-Dec-2005 10:06:58:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1564:12-Dec-2005 10:10:00:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1584:12-Dec-2005 10:10:07:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1604:13-Dec-2005 06:50:05:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1624:14-Dec-2005 11:16:23:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1644:15-Dec-2005 07:35:40:System Event #131:Timestamp Clock Synch
1664:15-Dec-2005 07:35:37:System Event #131:Timestamp Clock Synch
1684:15-Dec-2005 07:36:11:System Event #131:OEM System Boot Event
1704:18-Dec-2005 12:41:53:System Event #131:Timestamp Clock Synch
1724:18-Dec-2005 12:41:50:System Event #131:Timestamp Clock Synch
1744:18-Dec-2005 12:42:23:System Event #131:OEM System Boot Event
1764:19-Dec-2005 04:50:50:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1784:19-Dec-2005 04:50:51:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1804:25-Dec-2005 13:33:22:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1824:25-Dec-2005 13:33:23:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1844:26-Dec-2005 14:36:16:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1864:26-Dec-2005 14:36:55:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1884:26-Dec-2005 14:42:33:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1904:26-Dec-2005 14:42:36:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1924:27-Dec-2005 02:20:51:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1944:27-Dec-2005 02:20:59:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1964:27-Dec-2005 04:16:11:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
1984:27-Dec-2005 04:16:21:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2004:27-Dec-2005 05:06:46:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2024:27-Dec-2005 05:06:55:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2044:28-Dec-2005 08:30:42:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2064:28-Dec-2005 08:31:03:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2084:28-Dec-2005 08:32:39:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2104:28-Dec-2005 08:33:20:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2124:28-Dec-2005 08:42:29:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2144:28-Dec-2005 08:43:28:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2164:03-Jan-2006 16:40:37:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2184:03-Jan-2006 16:40:45:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
2204:03-Jan-2006 16:40:58:Platform Chassis Intrusion #5:LAN Leash Lost (system is unplugged from LAN):Network controller #15
www:~# 
@end example

@node bmc-watchdog, ipmipower, ipmi-sel, Top
@chapter bmc-watchdog
@pindex bmc-watchdog
@command{bmc-watchdog} is a daemon and configuration utility for BMC
watchdog timer.  When run as a daemon, it periodically resets the timer
so that, should the system lock up, the BMC can perform an appropriate
emergency recovery action. 

The bmc-watchdog tool typically executes as a cronjob or daemon to
manage the watchdog timer.  A user must be root in order to run
bmc-watchdog.  

@menu
* Watchdog theory::             BMC Watchdog Theory.
* bmc-watchdog options::        Command-line arguments.
* bmc-watchdog example::        @command{bmc-watchdog} example.
* bmc-watchdog known issues::   Known issues with the @command{bmc-watchdog}.
@end menu

@node Watchdog theory, bmc-watchdog options, bmc-watchdog, bmc-watchdog
@section BMC Watchdog Theory

A BMC watchdog timer is part of the Intelligent Platform Management
Interface (@acronym{IPMI}) specification and is only available to BMCs that are
compliant with @acronym{IPMI}@.  When a BMC watchdog timer is started, it begins
counting down to zero from some positive number of seconds.  When the
timer hits zero, the timer will execute a pre-configured pre-timeout
interrupt and/or timeout action.

In order to stop the pre-timeout interrupt or timeout action from
being generated, the watchdog timer must be periodically reset back to
its initial beginning value.

The BMC watchdog timer automatically stops itself when the machine is
rebooted.  Therefore, when a machine is brought up, the BMC watchdog
timer must be setup again before it can be used.

Typically, a BMC watchdog timer is used to automatically reset a
machine that has crashed.  When the operating system first starts up,
the BMC timer is set to its initial countdown value.  At periodic
intervals, when the operating system is functioning properly, the
watchdog timer can be reset by the OS or a userspace program.  Thus,
the timer never counts down to zero.  When the system crashes, the
timer cannot be reset by the OS or userspace program.  Eventually, the
timer will countdown to zero and reset the machine.

@node bmc-watchdog options, bmc-watchdog example, Watchdog theory, bmc-watchdog
@section command-line arguments

@menu
* bmc-watchdog general options::  General command-line arguments.
* bmc-watchdog command options::  Command command-line arguments.
* bmc-watchdog set options::    Set command-line arguments.
* bmc-watchdog start options::  Start command-line arguments.
* bmc-watchdog daemon options::  Daemon command-line arguments.
@end menu

@node bmc-watchdog general options, bmc-watchdog command options, bmc-watchdog options, bmc-watchdog options
@subsection bmc-watchdog general options
The following commands are available to bmc-watchdog.
@itemize @bullet
The following options can be used by any command.

@item -h, ---help @*
      Display the help menu.  If a specific command (@option{--set},
@option{--get}, @option{--reset}, @option{--start}, @option{--stop},
@option{--clear}, or @option{--daemon}) is listed on the command line,
only the specific options for that command will be listed.

@item -v, ---version @*
      Display the version information.

@item -o @var{int}, ---io-port=@var{int} @*
      Identify the System Base Address for KCS SMS/IO.  By default,
@samp{0x0CA2} is used.  Port @samp{0x8A2} is also common.  If the
io-port number is prefixed with a @samp{0x}, it is assumed to be a
base-16 integer.  Otherwise, it is assumed to be a base-10 integer.

@cindex io-port

@item -f @var{string}, ---logfile=@var{string} @*
      Specify an alternate logfile from the default of
@file{/var/log/freeipmi/bmc-watchdog.log}@. 
@cindex bmc-watchdog.log

@item -n, ---no-logging
      Turns off all logging done by bmc-watchdog.
@end itemize

@node bmc-watchdog command options, bmc-watchdog set options, bmc-watchdog general options, bmc-watchdog options
@subsection bmc-watchdog command options
The following commands are available to bmc-watchdog.
@itemize @bullet
@item -s, ---set @*
       Set BMC Watchdog Configuration.  BMC watchdog timer
configuration values can be set using the set command options listed
below under @ref{bmc-watchdog set options}@.  If a particular configuration
parameter is not specified on the command line, the current
configuration of that parameter will not be changed.

@item -g, ---get @*
      Get BMC watchdog configuration and state.  The current
configuration and state is printed to standard output.

@item -r, ---reset @*
      Reset BMC watchdog timer.

@item -t, ---start @*
      Start BMC watchdog timer identical to ---reset command when the
timer is stopped.  Does nothing if the timer is currently running.

@item -y, ---stop @*
      Stop BMC watchdog timer.  Stops the current timer.

@item -c, ---clear @*
      Clear BMC watchdog configuration.  Clears all configuration
values for the watchdog timer, except for timer use, which is kept at
its current value.

@item -d, ---daemon @*
      Run @command{bmc-watchdog} as a daemon.  Configurable BMC
watchdog timer options are listed below under @ref{bmc-watchdog daemon options}@.
The configuration values are set once, then the daemon will reset the
timer at specified periodic intervals.  Every time the BMC watchdog
timer is reset, a log entry will be generated in the
@file{bmc-watchdog} log.  The default log is stored at
@file{/var/log/freeipmi/bmc-watchdog.log}@.  The daemon can be stopped
using the @option{--stop} command, @option{--clear} command, or by setting
the @samp{stop_timer} flag on the @option{--set} command.
@end itemize

@node bmc-watchdog set options, bmc-watchdog start options, bmc-watchdog command options, bmc-watchdog options
@subsection bmc-watchdog set options
The following options can be used by the set command to set or clear
various BMC watchdog configuration parameters. 

@itemize @bullet
@item -u @var{int}, ---timer-use=@var{int} @*
      Set timer use.  The timer use value can be set to one of the
following:
@example
      @samp{1} = BIOS FRB2 
      @samp{2} = BIOS POST 
      @samp{3} = OS_LOAD
      @samp{4} = SMS OS
      @samp{5} = OEM
@end example

@item -m @var{int}, ---stop-timer=@var{int} @*
      Set stop timer flag.  A flag value of @samp{0} stops the current
BMC watchdog timer.  A value of @samp{1} doesn't turn off the current
watchdog timer.

@item -l @var{int}, ---log=@var{int} @*
      Set log flag.  A flag value of @samp{0} turns logging on.  A value
      of @samp{1} turns logging off.

@item -a @var{int}, ---timeout-action=@var{int} @*
      Set timeout action.  The timeout action can be set to one of the
following:  
@example
      @samp{0} = No action
      @samp{1} = Hard Reset
      @samp{2} = Power Down
      @samp{3} = Power Cycle
@end example

@item -p @var{int}, ---pre-timeout-interrupt=@var{int} @*
      Set pre-timeout interrupt.  The pre timeout interrupt can be set
to one of the following: 
@example
      @samp{0} = None
      @samp{1} = SMI
      @samp{2} = NMI
      @samp{3} = Messaging Interrupt
@end example

@item -z @var{secs}, ---pre-timeout-interval=@var{secs} @*
      Set pre-timeout interval in seconds.

@item -F, ---clear-bios-frb2 @*
      Clear BIOS FRB2 Timer Use flag.

@item -P, ---clear-bios-post @*
      Clear BIOS POST Timer Use flag.

@item -L, ---clear-os-load @*
      Clear OS Load Timer Use flag.

@item -S, ---clear-sms-os @*
      Clear SMS/OS Timer Use flag.

@item -O, ---clear-oem @*
      Clear OEM Timer Use Flag.

@item -i @var{secs}, ---initial-countdown=@var{secs} @*
      Set initial countdown in seconds.

@item -w, ---start-after-set @*
      Start timer after set command if timer is stopped.  This is
typically used when bmc-watchdog is used as a cronjob.  This can be
used to automatically start the timer after it has been set the first
time.

@item -x, ---reset-after-set @*
      Reset timer after set command if timer is running.

@item -j, ---start-if-stopped @*
      Don't execute set command if timer is stopped, just start
timer. 

@item -k, ---reset-if-running @*
      Don't execute set command if timer is running, just reset
timer.  This is typically used when bmc-watchdog is used as a cronjob.
This can be used to reset the timer after it has been initially
started.
@end itemize

@node bmc-watchdog start options, bmc-watchdog daemon options, bmc-watchdog set options, bmc-watchdog options
@subsection bmc-watchdog start options
The following options can be used by the start command.

@itemize @bullet
@item -G @var{int}, ---gratuitous-arp=@var{int} @*
       Suspend or don't suspend gratuitous ARPs while the BMC timer is
running.  A flag value of @samp{1} suspends gratuitous ARPs.  A value of
@samp{0} will not suspend gratuitous ARPs.  If this option is not
specified, gratuitous ARPs will not be suspended.

@item -A @var{int}, ---arp-response=@var{int} @*
      Suspend or don't suspend BMC-generated ARP responses while the
BMC timer is running.  A flag value of @samp{1} suspends ARP responses.
A value of @samp{0} will not suspend ARP responses.  If this option is
not specified, ARP responses will not be suspended.
@end itemize

@node bmc-watchdog daemon options,  , bmc-watchdog start options, bmc-watchdog options
@subsection bmc-watchdog daemon options
The following options can be used by the daemon command to set the
initial BMC watchdog configuration parameters. 

@itemize @bullet
@item -u @var{int}, ---timer-use=@var{int} @*
      Set timer use.  The timer use value can be set to one of the
following:
@example
      @samp{1} = BIOS FRB2 
      @samp{2} = BIOS POST 
      @samp{3} = OS_LOAD
      @samp{4} = SMS OS
      @samp{5} = OEM
@end example

@item -l @var{int}, ---log=@var{int} @*
      Set Log Flag.  A flag value of @samp{0} turns logging on.  A
value of @samp{1} turns logging off.

@item -a @var{int}, ---timeout-action=@var{int} @*
      Set timeout action.  The timeout action can be set to one of the
following:
@example
      @samp{0} = No action
      @samp{1} = Hard Reset
      @samp{2} = Power Down
      @samp{3} = Power Cycle
@end example

@item -p @var{int}, ---pre-timeout-interrupt=@var{int} @*
      Set pre-timeout interrupt.  The pre timeout interrupt can be set
to one of the following:
@example
      @samp{0} = None
      @samp{1} = SMI
      @samp{2} = NMI
      @samp{3} = Messaging Interrupt
@end example

@item -z @var{secs}, ---pre-timeout-interval=@var{secs} @*
      Set pre-timeout interval in seconds.

@item -F, ---clear-bios-frb2 @*
      Clear  BIOS FRB2 Timer Use flag.

@item -P, ---clear-bios-post @*
      Clear BIOS POST Timer Use flag.

@item -L, ---clear-os-load @*
      Clear OS Load Timer Use flag.

@item -S, ---clear-sms-os @*
      Clear SMS/OS Timer Use flag.

@item -O, ---clear-oem @*
      Clear OEM Timer Use flag.

@item -i @var{secs}, ---initial-countdown=@var{secs} @*
      Set initial countdown in seconds.

@item -G @var{int}, ---gratuitous-arp=@var{int} @*
      Suspend or don't suspend gratuitous ARPs while the BMC timer is
running.  A flag value of @samp{1} suspends gratuitous ARPs.  A value
of @samp{0} will not suspend gratuitous ARPs.  If this option is not
specified, gratuitous ARPs will not be suspended.

@item -A @var{int}, ---arp-response=@var{int} @*
      Suspend or don't suspend BMC-generated ARP responses while the
BMC timer is running.  A flag value of @samp{1} suspends ARP responses.
A value of @samp{0} will not suspend ARP responses.  If this option is
not specified, ARP responses will not be suspended.

@item -e, ---reset-period
      Time interval to wait before resetting timer.  The default is
@samp{60} seconds.
@end itemize

@node bmc-watchdog example, bmc-watchdog known issues, bmc-watchdog options, bmc-watchdog
@section bmc-watchdog example
Setup a bmc-watchdog daemon that resets the machine after 
@samp{15 minutes} (900 seconds) if the OS has crashed.
@footnote{see default @command{bmc-watchdog} rc script
@file{/etc/init.d/bmc-watchdog} a more complete example.}

@example
debian-ia64:~# bmc-watchdog -d -u 4 -p 0 -a 1 -i 900
debian-ia64:~# ps -C bmc-watchdog
  PID TTY          TIME CMD
 1035 ?        00:00:00 bmc-watchdog
debian-ia64:~# 
@end example

@node bmc-watchdog known issues,  , bmc-watchdog example, bmc-watchdog
@section bmc-watchdog known issues
@command{bmc-watchdog} may fail to reset the watchdog timer if it is
not  scheduled  properly.  It is always recommended that bmc-watchdog
be executed with a high scheduling priority.

On some machines, the hardware based SMI Handler may disable a
processor after a watchdog timer timeout if the timer use is set to
something other than SMS/OS.

@node ipmipower, ipmiping, bmc-watchdog, Top
@chapter IPMI power control utility
@pindex ipmipower
Remote out-of-band chassis control utility to perform power-up,
power-down, power-cycle, hard-reset, pulse-diagnostics-interrupt and
OS soft shutdown operations.

PowerMan @uref{http://www.llnl.gov/linux/powerman/} now supports
@command{ipmipower} as a remote power control device. 

Whenever a power command (@option{--on}, @option{--off},
@option{--cycle}, @option{--reset}, @option{--stat}, @option{--pulse},
or @option{--soft}) is specified on the command-line,
@command{ipmipower} will run in non-interactive mode.
@command{ipmipower} will attempt to run the power command on all
hostnames listed on the command line then exit. 

If no power commands are specified on the command line,
@command{ipmipower} will run in interactive mode.  Interactive mode
gives the user a command-line interface to enter various commands.
Details of the interactive command line interface can be found under
@ref{ipmipower basic options} section.

@menu
* ipmipower options::           Command-line arguments. 
* ipmipower configuration file::  Configuration file.
* ipmipower interactive commands::  Interactive commands.
* Host ranges::                 Host range specificaiton.
* ipmipower example::           ipmipower example.
* Use with powerman::           PowerMan integration.
* ipmipower known issues::      Known issues.
@end menu

@node ipmipower options, ipmipower configuration file, ipmipower, ipmipower
@section Command-line arguments

@menu
* ipmipower basic options::     Basic options.
* ipmipower advanced options::  Advanced options.
* ipmipower network options::   Network options.
@end menu

@node ipmipower basic options, ipmipower advanced options, ipmipower options, ipmipower options
@subsection ipmipower basic options
The following options are basic options for ipmipower.

@itemize @bullet
         @item -h, ---hostnames @var{host1},@var{host2},@dots{} @*
      The list of hostname addresses to be controlled by
@command{ipmipower}@. The hostnames must resolve to the IP address of
the NIC connected to the remote host BMC.  If hostnames do not resolve
to proper BMC IP addresses,  RMCP ping messages will not discover the
remote host or power commands will time out.  This option is required
if a power command (@option{--on}, @option{--off}, @option{--cycle},
@option{--reset}, or @option{--stat}, @option{--pulse},
@option{--soft}) is specified on the command-line.  Hostnames may be
specified in a range format; see @ref{Host ranges} section.

@item -u, ---username @var{name} @*
      Sets the username to use when authenticating with the BMC.  The
user must have @var{operator} or @var{administrator} privilege to run
the  @option{--on}, @option{--off}, @option{--reset},
@option{--cycle}, @option{--pulse}, or @option{--soft} power control
commands.  The user needs only @var{user} privileges to determine the
status of the machine through @option{--stat}@.  If not specified, a
null username (Anonymous Login @samp{User ID 1}) is assumed.

@item -p, ---password @var{password} @*
      Sets the @var{password} to use when authenticating with the BMC.
If not specified, a null password is assumed.

@item -n, ---on @*
      Power on the target hosts.

@item -f, ---off @*
      Power off the target hosts.

@item -c, ---cycle @*
      Power cycle the target hosts.

@item -r, ---reset @*
      Reset the target hosts.

@item -s, ---stat @*
      Get power status of the target hosts.

@item -j, ---pulse @*
      Send power diagnostic interrupt to target hosts.

@item -k, ---soft @*
      Initiate a soft-shutdown of the OS via ACPI.

@item -H, ---help @*
      Display the help menu and exit.

@item -V, ---version @*
      Display the version information and exit.

@item -C, ---config file @*
      Specify alternate configuration file.
@end itemize

@node ipmipower advanced options, ipmipower network options, ipmipower basic options, ipmipower options
@subsection ipmipower advanced options
The following advanced options are used to change the behavior of
ipmipower.

@itemize @bullet
@item -a, ---authtype @var{auth-type} @*
      Sets the authentication type to use with @command{ipmipower}@.
The currently available authentication types are:
@example
        @samp{none}
        @samp{straight_passwd_key} => (default)
        @samp{md2}
        @samp{md5}
@end example

@item -g,  ---on-if-off @*
      The @acronym{IPMI} specification does not require the @command{cycle} or
@command{reset} commands to turn on a machine that is currently
powered off.  This option will force @command{ipmipower} to issue a
power on command instead of a power cycle or hard reset command if the
remote machine's power is currently off.

@item -o, ---outputtype @var{output-type} @*
       Sets the output type to use with @command{ipmipower}@.  The
currently available output types are: 
@example
        @samp{none}
        @samp{newline}    => (default)
        @samp{hostlist}
@end example
@end itemize

Hostlist output can be used to shorten output if the number of nodes
in your cluster is quite large.  However, hostlist output will only
output after the slowest node has completed its power control
operation. 

@node ipmipower network options,  , ipmipower advanced options, ipmipower options
@subsection ipmipower network options
The following options are used to change the behavior of the actual
@command{ipmipower} network protocol used. 

@itemize @bullet
@item -t, ---timeout @var{time-out} @*
      Sets the @var{time-out} in milliseconds.  @command{ipmipower}
uses the @var{time-out} value to determine when to give up on a power
command.  If not specified, a default @var{time-out} of 20000
milliseconds (20 seconds) is used.

@item -y, ---retry-timeout @var{retry-timeout} @*
      Sets the retry-timeout in milliseconds.  The @acronym{IPMI} protocol sends
a series of packets back and forth to a remote host BMC in order to
perform a power control operation.  When a response to any individual
packet is not received after @var{retry-timeout} milliseconds,
@command{ipmipower} will retry sending that packet.  If not specified,
packet retransmissions will occur after @samp{400} milliseconds (0.4
seconds).  The value @var{ms} must be less than the time out length
specified with @option{--timeout}@.  Packet retransmissions can be
disabled by setting the @var{retry-timeout} length to @samp{0}@.

       Note how this option differs from the @option{--timeout} option
above.  The @option{--timeout} option refers to the entire amount of
time the @acronym{IPMI} protocol has to complete a power control operation.  The
@option{--retry} option refers to the amount of time any individual
packet within the @acronym{IPMI} protocol has to complete.

@item -b, ---retry-backoff-count @var{retry-backoff-count} @*
      After every @var{retry-backoff-count} retransmissions,
@command{ipmipower} will increase the @var{retry-timeout} length by
another factor for the duration of the current power control
operation.  This is done to reduce network traffic and allow BMC
buffers to empty.  If not specified, @var{retry-backoff-count} is
@samp{8}@.  Retransmission backoff can be disabled by setting the retry
backoff count to @samp{0}@.

@item -i, ---ping-interval @var{ping-interval} @*
@item -z, ---ping-timeout @var{ping-timeout} @*
      @command{ipmipower} will send RMCP ping discovery messages every
@var{ping-interval} milliseconds to discover all remote hosts and
confirm its support of @acronym{IPMI}@.  Power commands cannot be sent to a host
until it is discovered.  If a remote host does not respond within
@var{ping-timeout} milliseconds, a host will be considered
undiscovered and power commands will not be sent to it.  If not
specified, @var{ping-interval} is @samp{5000} milliseconds (5 seconds)
and @var{ping-timeout} is @samp{30000} milliseconds (30 seconds).
Ping discovery requests can be disabled by setting the ping interval
to @samp{0}@.  If ping discovery messages are disabled, power commands
will be attempted without knowledge of the host's existence or its
support of @acronym{IPMI}@.  The value of @var{ping-interval} must be less than
the @var{ping-timeout} length.  RMCP ping discovery messages are
automatically disabled in non-interactive mode.

@item -v, ---ping-packet-count @var{ping-packet-count} @*
@item -w, ---ping-percent @var{ping-percent} @*
      It is difficult to distinguish between a missing node and node
with a bad connection when using just RMCP pings and timeouts. For
example, if a link consistently drops 80% of the packets to a
particular node, a power control operation may have difficulty
completing, although a recent pong response makes ipmipower
believe the node exists and is functioning properly.  The
@option{--ping-packet-count} and  @option{--ping-percent} options
alleviate this problem.  @command{ipmipower} will monitor ping packets
in @var{ping-packet-count} chunks.  If @command{ipmipower} does not
receive a response to greater than @var{ping-percent} of those
packets, @command{ipmipower} will assume the link to this node is bad
and will not send power control operations to that node until the
connection is determined to be reliable.  If not specified,
@var{ping-packet-count} is @samp{10} and @var{ping-percent} is
@samp{50}@.  This heuristic can be disabled by setting either
@var{ping-packet-count} or @var{ping-percent} to @samp{0}@.  This
feature is not used if @var{ping-interval} is set to @samp{0}@.  Note
that the @option{--ping-percent} option takes an integer as an
argument, not a decimal.

@item -x, ---ping-consec-count @var{ping-consec-count} @*
      @var{ping-consec-count} is another measurement used to determine
if a node should be considered discovered, undiscovered, or with a bad
connection.  If a valid response was received from the last
@var{ping-consec-count} RMCP ping packets, a node will be considered
discovered, regardless if @var{ping-packet-count} and
@var{ping-percent} statistically consider the link to be unreliable.
If not specified, @var{ping-consec-count} is @samp{5}@.  This feature
can be disabled by setting @var{ping-consec-count} to @samp{0}@.  This
feature is not used if @var{ping-interval},
@option{--ping-packet-count}, or @option{--ping-percent} are set to
@samp{0}@.
@end itemize

@node ipmipower configuration file, ipmipower interactive commands, ipmipower options, ipmipower
@section ipmipower configuration file
The @command{ipmipower} configuration file can be used to set default
values to ipmipower when values aren't set on the command line.  This
allows users to avoid typing in a long list of command line options
everytime ipmipower is executed.  It can also be used to hide
usernames and passwords from the @command{ps} command. See
@ref{ipmipower known issues} for details.

By default, the configuration file is stored at
@file{/etc/ipmipower.conf}.  But users may select a different
configuration file at the command line through the @option{--config}
option.

The user can still override the configuration file values by
specifying the options on the command line.  The configuration file
does not stop a user from specifying certain options. 

@subsection Configuration options
The following are a list of configuration options that can be
specified in the configuration file.  Each configuration option must
be listed on a separate line.  Arguments for an option are separated
by any amount of whitespace.  Multiple arguments are also separated by
whitespace.  Comments can be marked by using the pound sign ("#")
character, and lines can be continued on the next using backslash
("\").

Note that it is possible to list the username and password in
the con- figuration file.  If this data is stored in a configuration
file, sys- tem administrators should limit access to this file.

@itemize @bullet
@item hostnames @var{host1} @var{host2} @var{host3} @dots{} @*

Specify the default hostnames.  Multiple hostnames or hostname ranges
can be specified by separating each range by whitespace.  See
@ref{Host ranges} for information on hostname ranges.  For example,
any of the following configuration listings would be acceptable:

@example
hostnames @var{host1} @var{host2} @var{host3} @var{foo1} @var{bar1}
hostnames @var{host1},@var{host2},@var{host3},@var{foo1},@var{bar1}
hostnames @var{host}[1-3] @var{foo1} @var{bar1}
hostnames @var{host}[1-3] @var{foo1},@var{bar1}
@end example

At most 64 hostnames or hostname ranges can be separted by
whitespace. 

@item username @var{username} @*
Specify the default @var{username} to use.

@item password @var{password} @*
Specify the default @var{password} to use.

@item authtype @var{authtype} @*
Specify the default authentication type to use.  @command{ipmipower}
currently supports the following authentication types: 

@example
        @samp{straight_passwd_key}
        @samp{md2}
        @samp{md5}
@end example

@item on-if-off enable|disable @*

@item outputtype @var{outputtype} @*
Specify the default outputtype type to use.  @command{ipmipower}
currently supports the following output types:  

@example
        @samp{none}
        @samp{newline}    => (default)
        @samp{hostlist}
@end example

@item timeout @var{timeout} @*
Specify the @var{timeout} in ms.

@item retry-timeout @var{timeout} @*
Specify the retry @var{timeout} in ms.  See @ref{ipmipower} for an
explanation on the difference between this is the @var{timeout}
option. 

@item retry-backoff-count @var{num} @*
Specify the retry backoff count.

@item ping-interval @var{interval-length} @*
Specify the ping @var{interval-length} in ms.

@item ping-timeout @var{timeout} @*
Specify the ping @var{timeout} length in ms.

@item ping-packet-count @var{count} @*
Specify a new ping packet @var{count}.

@item ping-percent @var{num} @*
Specify a new ping percent.

@item ping-consec-count @var{count} @*
       Specify a new ping consec @var{count}.
@end itemize

@node ipmipower interactive commands, Host ranges, ipmipower configuration file, ipmipower
@section ipmipower interactive commands
@command{ipmipower} provides the following interactive commands at the
@samp{ipmipower>} prompt.  Before any @command{power} commands (@samp{on},
@samp{off}, @samp{cycle}, @samp{reset}, @samp{stat}, @samp{pulse}, or
@samp{soft}) can be used, hostnames must be configured into @command{ipmipower},
either through the command prompt or the @command{hostnames} command below.

@itemize @bullet
@item hostnames @var{str} @*
      Specify a new set of hosts, no @var{str} to unconfigure all hosts.

@item username @var{str} @*
      Specify a new username, no @var{str} for null username.

@item password @var{str} @*
      Specify a new password, no @var{str} for null password.

@item on @var{host} @*
      Turns on all hosts, or only the specified host.

@item off @var{host} @*
      Turns off all hosts, or only the specified host.

@item cycle @var{host} @*
      Power cycle all hosts, or specified host.

@item reset @var{host} @*
      Hard reset all hosts or specified host.

@item stat @var{host} @*
      Queries power status for all hosts, or only the specified host.

@item pulse @var{host} @*
      Send pulse diagnostic interrupt to all hosts, or only the
specified host. 

@item soft @var{host} @*
      Initiate a soft-shutdown of the OS via ACPI  to  all  hosts,  or
     only the specified host.

@item help @*
      Display the help menu.

@item advanced @*
      Display the advanced help menu.

@item network @*
      Display the network help menu.

@item quit @*
      Quit ipmipower.

@item authtype @var{str} @*
      Specify a new authentication type:
@example
        @samp{none}
        @samp{straight_passwd_key}
        @samp{md2}
        @samp{md5}
@end example

@item outputtype @var{str} @*
      Specify a new output type:
@example
        @samp{none}
        @samp{newline}
        @samp{hostlist}
@end example

@item config @*
      Output the current configuration.

@item timeout @var{ms} @*
      Specify a new timeout length.

@item retry-timeout @var{ms} @*
      Specify a new retry timeout length.

@item retry-backoff-count @var{num} @*
      Specify a new retry backoff count.

@item ping-interval @var{ms} @*
      Specify a new ping interval length.

@item ping-timeout @var{ms} @*
      Specify a new ping timeout length.

@item ping-packet-count @var{num} @*
      Specify a new ping packet count.

@item ping-percent @var{num} @*
      Specify a new ping percent.

@item ping-consec-count @var{num} @*
      Specify a new ping consec count.
@end itemize

@node Host ranges, ipmipower example, ipmipower interactive commands, ipmipower
@section Host ranges
As noted above, ipmipower accepts a range of hostnames in the general
form: prefix[n-m,l-k,...], where n < m and l < k, etc., as an
alternative to explicit comma separated lists of hosts.  This form
should not be confused with regular expression character classes (also
denoted by []).  For example, foo[19] does not represent foo1 or foo9,
but rather represents a degenerate range: foo19.

This range syntax is meant only as a convenience on clusters with a
prefixNN naming convention and specification of ranges should not be
considered necessary -- the list foo1,foo9 could be specified as
such, or by the range foo[1,9].

Some examples of range usage follow:
@example
        foo[01-05] instead of foo01,foo02,foo03,foo04,foo05
        foo[7,9-10] instead of foo7,foo9,foo10
        foo[0-3] instead of foo0,foo1,foo2,foo3
@end example

As a reminder to the reader, some shells will interpret brackets ([
and ]) for pattern matching.  Depending on your shell, it may be
necessary to enclose ranged lists within quotes.

@node ipmipower example, Use with powerman, Host ranges, ipmipower
@section ipmipower example

Determine the power status of foo[0-2] with null username and
password.
@example
        ipmipower -h foo[0-2] --stat
@end example

Determine the power status of foo[0-2] with non-null username and
password.
@example
        ipmipower -h foo[0-2] -u foo -p bar --stat
@end example

Hard reset nodes foo[0-2] with non-null username and password.
@example
        ipmipower -h foo[0-2] -u foo -p bar --reset
@end example

Hard reset the nodes configured in a configuration file.
@example
        ipmipower -C /etc/powerctrl.conf --reset
@end example

Example @command{ipmipower} session:
@example
debian-sid:~# ipmipower --hostnames debian-ia64 --password "rea1secret" --stat
debian-ia64: on
debian-sid:~# ipmipower --hostnames debian-ia64 --password "rea1secret" --off
debian-ia64: ok
debian-sid:~# ipmipower --hostnames debian-ia64 --password "rea1secret" --stat
debian-ia64: off
debian-sid:~# ipmipower --hostnames debian-ia64 --password "rea1secret" --on
debian-ia64: ok
debian-sid:~# 
@end example

@node Use with powerman, ipmipower known issues, ipmipower example, ipmipower
@section Use with powerman
@cindex powerman
@pindex powerman
The @command{powerman} device configuration file @file{ipmipower.dev}
supplied with @command{powerman} 1.0.20 and beyond can be used to
control one or more instances of @command{ipmipower} in coprocess
mode. 

Due to deficiencies within @command{powerman}, the power control
operations @option{--on}, @option{--off}, @option{--cycle},
@option{--reset} will be reported as successful, despite any errors
that may occur.  The user should use the @option{--query} option to
ensure that all remote hosts were successfully powered on or off. 

It is recommend that the @option{--on-if-off} option be used with
@command{ipmipower} when it is used in conjunction with powerman.  This
will ensure @command{ipmipower} behaves similarly to other
@command{powerman} devices. 

@node ipmipower known issues,  , Use with powerman, ipmipower
@section Known issues with the ipmipower command
In order to prevent brute force attacks, some BMCs will @emph{lock up}
after a number of username, password, or privilege errors.  There is
no known way to cleanly deal with a @emph{locked up} BMC.  The best
option is to simply @strong{wait awhile}@.

On certain operating systems, if you input your username and password
on the command line, the username and password may be discovered by
other users when using the @command{ps} command or looking in the
@file{/proc} file system.  The most secure solution is to enter the
username and password while in interactive mode.  If administrators do
not wish to type in their username and password at the interactive
prompt, they can be listed in a configuration file, in which the
access to this file can be limited. 

@acronym{IPMI} specifications do not require BMCs to perform a power
control operation before returning a completion code to the caller.
Therefore, it is possible for ipmipower power status queries to
initially return information other than what you are expecting.  For
example, if a @samp{power off} operation is performed, a BMC may
return a successful completion-code to ipmipower before the
@samp{power off} operation is actually performed.  Subsequent power
status queries may return @samp{on} for several seconds, until the BMC
actually performs the @samp{power off} operation.

@node ipmiping, rmcpping, ipmipower, Top
@chapter ipmiping
@pindex ipmiping
@acronym{IPMI} discovery and reachability test tool. 

@command{ipmiping} uses the @acronym{IPMI} @command{Get Authentication
Capabilities} request datagram to elicit an @acronym{IPMI} @command{Get
Authentication Capabilities} response from a remote host.  The utility
can be used to verify if a remote host supports @acronym{IPMI}@.

Returns @samp{0} to the environment if it receives at least @samp{1}
response from the remote host.  Otherwise, it exists with a value of
@samp{1}@. 

@menu
* ipmiping options::            Command-line arguments.
* ipmiping example::            @command{ipmiping} example.
* ipmiping known issues::       Known issues with the @command{ipmi-ping}
@end menu

@node ipmiping options, ipmiping example, ipmiping, ipmiping
@section command-line arguments
@subsection Synopsis
ipmiping [OPTIONS] destination

The following options are available
@itemize @bullet
@item -h @*
      Display the help menu.

@item -V @*
      Display the version information.

@item -c @var{count} @*
      Stop after sending @var{count} request packets.

@item -i @var{interval} @*
      Wait @var{interval} seconds between sending each packet.  The
default is to wait for one second between each packet.

@item -I @var{interface-address} @*
      Set source address to specified
@var{interface-address}@. Argument may be numeric IP address or name of
device. 

@item -t @var{timeout} @*
      Time to wait for a response, in seconds. Default is five
seconds. 

@item -v @*
      Verbose Display.
@end itemize

@node ipmiping example, ipmiping known issues, ipmiping options, ipmiping
@section ipmiping example

Example: Test the BMC reachability of host @samp{debian-ia64} using
@acronym{IPMI} protocol.
@example
debian-sid:~# ipmiping debian-ia64
ipmiping debian-ia64 (192.168.1.60)
response received from 192.168.1.60: rq_seq=0
response received from 192.168.1.60: rq_seq=1
response received from 192.168.1.60: rq_seq=2
response received from 192.168.1.60: rq_seq=3
response received from 192.168.1.60: rq_seq=4
response received from 192.168.1.60: rq_seq=5
--- ipmiping debian-ia64 statistics ---
6 requests transmitted, 6 responses received in time, 0.0% packet loss
@end example

Example: Test the BMC reachability of host @samp{debian-ia64} in
verbose mode. 
@example
debian-sid:~# ipmiping -v debian-ia64
ipmiping debian-ia64 (192.168.1.60)
response received from 192.168.1.60: rq_seq=0, auth: none=set md2=set md5=set passwd=set oem=clear permsg=clear user=set
response received from 192.168.1.60: rq_seq=1, auth: none=set md2=set md5=set passwd=set oem=clear permsg=clear user=set
response received from 192.168.1.60: rq_seq=2, auth: none=set md2=set md5=set passwd=set oem=clear permsg=clear user=set
response received from 192.168.1.60: rq_seq=3, auth: none=set md2=set md5=set passwd=set oem=clear permsg=clear user=set
response received from 192.168.1.60: rq_seq=4, auth: none=set md2=set md5=set passwd=set oem=clear permsg=clear user=set
--- ipmiping debian-ia64 statistics ---
5 requests transmitted, 5 responses received in time, 0.0% packet loss
@end example

Example: Test the BMC reachability of host @samp{debian-ia64} by
sending exactly 2 packets.
@example
debian-sid:~# ipmiping -c 2 debian-ia64
ipmiping debian-ia64 (192.168.1.60)
response received from 192.168.1.60: rq_seq=0
response received from 192.168.1.60: rq_seq=1
--- ipmiping debian-ia64 statistics ---
2 requests transmitted, 2 responses received in time, 0.0% packet loss
debian-sid:~# 
@end example

@node ipmiping known issues,  , ipmiping example, ipmiping
@section ipmiping known issues
It has been observed that some remote BMCs can get @emph{confused} and
delay packet responses if duplicate packets are sent in succession
very quickly.  For example, this could happen if the user repeatedly
executes @command{ipmiping -c 1 destination} very quickly.  There is
no known way to cleanly deal with a @emph{confused} BMC.  The best
option is to simply @strong{wait awhile}@.

@node rmcpping, Trouble-shooting, ipmiping, Top
@chapter rmcpping
@pindex rmcpping
RMCP/@acronym{IPMI} discovery and reachability test tool.

@command{rmcpping} uses the RMCP ping request datagram to elicit an
RMCP pong response from a remote host.  The utility can be used to
verify if a remote host supports RMCP or @acronym{IPMI}@.

Returns 0 to the environment if it receives at least @samp{1}
response from the remote host.  Otherwise, it exits with a value of
@samp{1}@.

@menu
* rmcpping options::            Command-line arguments.
* rmcpping example::            @command{rmcpping} example.
* rmcpping known issues::       Known issues with the @command{rmcpping}@.
@end menu

@node rmcpping options, rmcpping example, rmcpping, rmcpping
@section Command-line arguments

@subsection Synopsis
rmcpping [OPTIONS] destination
@itemize
@item -h @*
      Display the help menu.

@item -V @*
      Display the version information.

@item -c @var{count} @*
      Stop after sending count ping packets.

@item -i @var{interval} @*
      Wait @var{interval} seconds between sending each packet.  The
default is to wait for one second between each packet normally.

@item -I @var{interface-address} @*
      Set source address to specified @var{interface-address}@.
Argument may be numeric IP address or name of device.

@item -t @var{timeout} @*
      Time to wait for a response, in seconds.  Default is @samp{5}
seconds. 

@item -v
      Verbose display.
@end itemize

@node rmcpping example, rmcpping known issues, rmcpping options, rmcpping
@section rmcpping example
Example: Test the BMC reachability of host @samp{debian-ia64} using
RMCP protocol. 

@example
debian-sid:~# rmcpping debian-ia64
rmcpping debian-ia64 (192.168.1.60)
pong received from 192.168.1.60: msg_tag=0
pong received from 192.168.1.60: msg_tag=1
pong received from 192.168.1.60: msg_tag=2
pong received from 192.168.1.60: msg_tag=3
pong received from 192.168.1.60: msg_tag=4
pong received from 192.168.1.60: msg_tag=5
pong received from 192.168.1.60: msg_tag=6
pong received from 192.168.1.60: msg_tag=7
pong received from 192.168.1.60: msg_tag=8
--- rmcpping debian-ia64 statistics ---
9 pings transmitted, 9 pongs received in time, 0.0% packet loss
@end example

Example: Test the BMC reachability of host @samp{debian-ia64} in
verbose mode.
@example
debian-sid:~# rmcpping -v debian-ia64
rmcpping debian-ia64 (192.168.1.60)
pong received from 192.168.1.60: msg_tag=0, ipmi supported
pong received from 192.168.1.60: msg_tag=1, ipmi supported
pong received from 192.168.1.60: msg_tag=2, ipmi supported
pong received from 192.168.1.60: msg_tag=3, ipmi supported
pong received from 192.168.1.60: msg_tag=4, ipmi supported
--- rmcpping debian-ia64 statistics ---
5 pings transmitted, 5 pongs received in time, 0.0% packet loss
@end example

Example: Test the BMC reachability of host @samp{debian-ia64} by
sending exactly 2 packets.
@example
debian-sid:~# rmcpping -c 2 debian-ia64
rmcpping debian-ia64 (192.168.1.60)
pong received from 192.168.1.60: msg_tag=0
pong received from 192.168.1.60: msg_tag=1
--- rmcpping debian-ia64 statistics ---
2 pings transmitted, 2 pongs received in time, 0.0% packet loss
debian-sid:~# 
@end example

@node rmcpping known issues,  , rmcpping example, rmcpping
@section rmcpping known issues
It has been observed that some remote BMCs can get @emph{confused} and
delay packet responses if duplicate packets are sent in succession
very quickly.  For example, this could happen if the user repeatedly
executes @command{rmcpping -c 1 destination} very quickly.  There is
no known way to cleanly deal with a @emph{confused} BMC.  The best
option is to simply @strong{wait awhile}@.

@node Trouble-shooting, Contact us, rmcpping, Top
@chapter Trouble-shooting

@menu
* Ports conflict::              Fencing @acronym{IPMI} @acronym{IP} ports.
* Fish exception::              @strong{Cat ate the fish} exception.
* IPC key conflict::            Non-unique IPC key.
@end menu

@node Ports conflict, Fish exception, Trouble-shooting, Trouble-shooting
@section Fencing @acronym{IPMI} @acronym{IP} ports
@cindex Ports conflict
@cindex Fencing BMC
@example
Append the following to /etc/services:
# BMC IPMI/RMCP services
rmcp    623/udp         # Aux Bus Shunt (Primary RMCP Port)
rmcps   664/udp         # Secure Aux Bus (Secondary RMCP Port)
@end example
@acronym{BMC} internally (at hardware level) uses the above mentioned
ports for sending @acronym{RMCP}/@acronym{IPMI} packets . To avoid any
conflit with the @acronym{BMC}, Operating System should make sure no
other applications or services uses these ports for communication.
One easy way to do this is to start a simple daemon at the boot time
that opens these ports but never uses them. 

Most common victims to this issue are Remote-shell (rsh) and NIS
services. You will notice ``time out'' errors under heavy load, when
these services run over the @acronym{BMC} reserved ports.

Secure connections to BMC port 664 is not enabled on most BMC
implementations by default.

Thanks to Anand Manian (GE Power Systems) for reporting this 
problem.

@node Fish exception, IPC key conflict, Ports conflict, Trouble-shooting
@section ``Cat ate the fish'' exception
@cindex Cat ate the fish
@cindex Fish exception
@command{fish} throws exception if it encounters any error in its
extension system. Most of the times, You will get a clear indicative
message from the exception dump. 

In this example, Fish throws an exception message, when a built-in
primitive is misspelt as @command{fi-set-promt!} instead of
@command{fi-set-prompt!}. Unbound-variable @samp{tag} and @samp{throw
args} gives you the clue.
@example
root@@gnu:~/work/freeipmi# fish

>>--:>  >>--:>  >>--:> >>--:>
~ ~   Cat ate the fish!!  ~ ~
>>--:>  >>--:>  >>--:> >>--:>
Fish Exception (gh_standard_handler dump):
tag        : unbound-variable
throw args : (#f Unbound variable: ~S (fi-set-promt!) #f)
data       : [/usr/etc/fish/fish.scm]
No backtrace available.

FreeIPMI Shell [fish-0.1.0]
Copyright (C) 2003-2004 FreeIPMI Core Team
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty.
fish> 
@end example

@example
;; file: /usr/etc/fish/fish.scm (fish startup file)
(fi-set-promt! "fish# ")  
            ^---<< Typo, Spell correctly as "fi-set-prompt!"
@end example

@node IPC key conflict,  , Fish exception, Trouble-shooting
@section Non-unique IPC key
@cindex IPC key conflict
Drivers internally use the inode number of
@file{/var/lib/freeipmi/ipckey} to obtain a system wide unique IPC key
for locking and synchronization through @code{ftok} call.  It is
extremely rare (but possible) for more than one application to
conflict with this IPC key, because @code{ftok} doesn't absolutely 
guarantee system wide uniqueness. 

To regenerate a new system wide unique IPC key, you have to recreate
@file{/var/lib/freeipmi/ipckey} with a new inode number.

Example: Recreating @file{/var/lib/freeipmi/ipckey} file.
@example
debian-ia64:~# touch -f /var/lib/freeipmi/ipckey.new
debian-ia64:~# ls --inode /var/lib/freeipmi/ipckey
2289282 /var/lib/freeipmi/ipckey
debian-ia64:~# ls --inode /var/lib/freeipmi/ipckey.new
2289284 /var/lib/freeipmi/ipckey.new
debian-ia64:~# mv -f /var/lib/freeipmi/ipckey.new
/var/lib/freeipmi/ipckey
debian-ia64:~# ls --inode /var/lib/freeipmi/ipckey
2289284 /var/lib/freeipmi/ipckey
debian-ia64:~#
@end example

@node Contact us, Authors, Trouble-shooting, Top
@chapter Contact us

@itemize @bullet
@item Homepage:      @uref{http://www.gnu.org/software/freeipmi}

@item Project Main:  @uref{https://savannah.gnu.org/projects/freeipmi/}

@item Download:      @uref{https://savannah.gnu.org/files/?group=freeipmi}

@item Mailing List:  @uref{https://savannah.gnu.org/mail/?group=freeipmi}

@item Support:       @uref{https://savannah.gnu.org/support/?group=freeipmi}

@item Patches:       @uref{https://savannah.gnu.org/patch/?group=freeipmi}

@item News:          @uref{https://savannah.gnu.org/news/?group=freeipmi}

@item Bugs:          @uref{https://savannah.gnu.org/bugs/?group=freeipmi}

@item Tasks:         @uref{https://savannah.gnu.org/task/?group=freeipmi}

@item CVS:           @uref{https://savannah.gnu.org/cvs/?group=freeipmi}
@end itemize

Contact FreeIPMI Core Team <ab(@@)gnu.org.in>

@node Authors, Copying, Contact us, Top
@chapter Authors
@include authors.texi

@node Copying, Glossary, Authors, Top
@chapter Copying
@cindex Copying

@menu
* GNU FreeIPMI license::        
* GNU FreeIPMI documentation license::  
@end menu

@node GNU FreeIPMI license, GNU FreeIPMI documentation license, Copying, Copying
@section GNU FreeIPMI license
@include gpl.texi

@node GNU FreeIPMI documentation license,  , GNU FreeIPMI license, Copying
@section GNU FreeIPMI documentation license
@include fdl.texi

@node Glossary, Concept Index, Copying, Top
@chapter Glossary
@multitable @columnfractions 0.15 0.85
@item BMC   @tab [B]aseboard [M]anagement [C]ontroller.
@item FISH  @tab [F]ree[I]PMI [SH]ell.
@item GNU   @tab [G]NU's [N]ot [U]nix.
@item GPL   @tab GNU [G]eneral [P]ublic [L]icense.
@item IP    @tab [I]nternet [P]rotocol.
@item IPMI  @tab [I]ntelligent [P]latform [M]anagement [I]nterface
@item NIS   @tab [N]etwork [I]nformation [S]ervice. 
Also humerously known as [N]etwork [I]ntrusion [S]ervice :) .  
@item RMCP  @tab [R]empote [M]anagement [C]ontrol [P]rotocol.
@item RSH   @tab [R]emote [SH]ell.
@end multitable

@node Concept Index, Program Index, Glossary, Top
@unnumbered Concept index
@printindex cp

@node Program Index,  , Concept Index, Top
@unnumbered Program index
@printindex pg

@bye
