FreeIPMI Testing

by 

Albert Chu
chu11@llnl.gov

Updated: 06/24/09 for FreeIPMI 0.8.1

The following is a list of tests I've (semi) regularly done to measure
the compliance of a motherboard to IPMI as well as FreeIPMI's
compliance to the motherboard's implementation.  It is not 100%
thorough and will not guaranteee full compliance with the IPMI
specification, but it covers a fair amount of the IPMI specification
and tests a significant number of cases.  It should help uncover
many of the most common IPMI compliance issues.

All users/vendors/manufacturers are free to challenge me on all points
listed below, such as mandatory vs. optional requirements, whether
something meets strict compliance, etc.

All documentation below assume reasonably advanced knowledge of IPMI
and knowledge of FreeIPMI tools.  Please see the IPMI specification or
FreeIPMI documentation/manpages for additional information.

All tool testing listed below is general agnostic to execution in-band
vs. out-of-band with obvious exceptions (i.e. testing ipmipower
in-band, configuring the MAC address out-of-band, etc).  Naturally,
the testing below assumes the tester is not configuring/using FreeIPMI
workarounds.  That defeats the point of testing for IPMI compliance
:-)

Out of Band Configuration Definitions
-------------------------------------

A number of test situations below require a particular out-of-band
configuration on the remote machine.  The following define a set of
usernames/password combinations that will be referenced in the tests
below.

USERANONYMOUS - User #1 (i.e. NULL) username *without* a password.

USERNULL - User #1 (i.e. NULL) username *with* a password.

USER1 - A non-null username, with a password, and the highest
privilege this user can authenticate at is the "user" privilege.

OPERATOR1 - A non-null username, with a password, and the highest
privilege this user can authenticate at is the "operator" privilege.

ADMIN1 - A non-null username, with a password, and the highest
privilege this user can authenticate at is the "admin" privilege.

SOL1 - A non-null username, with a password, the highest privilege
this user can authenticate with is identical to the SOL privilege
level, and SOL payload access is enabled.

Bmc-config Testing
------------------

Test)

Execute bmc-config with --checkout, verify checked out configuration
contains all appropriate configurable fields.  At minimum, the fields
listed below should be output:
- For each "User" section:
  * Username
  * Enable_User
  * Password
  * Lan_Enable_IPMI_Msgs
  * Lan_Privilege_Limit
  * SOL_Payload_Access (if IPMI 2.0 is supported)
- For the Lan_Channel section:
  * Volatile_Access_Mode
  * Volatile_Enable_Per_Message_Auth
  * Non_Volatile_Access_Mode
  * Non_Volatile_Enable_Per_Message_Auth
- For the Lan_Conf section:
  * IP_Address_Source
  * IP_Address
  * MAC_Address
  * Subnet_Mask
  * Default_Gateway_IP_Address
  * Default_Gateway_MAC_Address
  * Backup_Gateway_IP_Address
  * Backup_Gateway_MAC_Address
- For the Lan_Conf_Auth section:
  * Callback_Enable_Auth_Type_None
  * Callback_Enable_Auth_Type_MD2
  * Callback_Enable_Auth_Type_MD5
  * Callback_Enable_Auth_Type_Straight_Password
  * User_Enable_Auth_Type_None
  * User_Enable_Auth_Type_MD2
  * User_Enable_Auth_Type_MD5
  * User_Enable_Auth_Type_Straight_Password
  * Operator_Enable_Auth_Type_None
  * Operator_Enable_Auth_Type_MD2
  * Operator_Enable_Auth_Type_MD5
  * Operator_Enable_Auth_Type_Straight_Password
  * Admin_Enable_Auth_Type_None
  * Admin_Enable_Auth_Type_MD2
  * Admin_Enable_Auth_Type_MD5
  * Admin_Enable_Auth_Type_Straight_Password
    o If some of these fields are not output, are the appropriate
    system "authentication type support" flags set properly?
- For the Lan_Conf_Security_Keys section (if IPMI 2.0 is supported):
  * K_G
- For the Lan_Conf_Misc:
  * Enable_Gratuitous_ARPs (if gratuitous ARPs supported)
  * Enable_ARP_Response (if BMC generated ARPs supported)
  * Gratuitous_ARP_Interval (if gratuitous ARPs supported)
- For Rmcpplus_Conf_Privilege section:
  * Maximum_Privilege_Cipher_Suite_Id_0
  * Maximum_Privilege_Cipher_Suite_Id_1
  * Maximum_Privilege_Cipher_Suite_Id_2
  * Maximum_Privilege_Cipher_Suite_Id_3
- For SOL_Conf section (if IPMI 2.0 is supported):
  * Enable_SOL 
  * SOL_Privilege_Level
  * Force_SOL_Payload_Authentication
  * Force_SOL_Payload_Encryption
  * Character_Accumulate_Interval
  * Character_Send_Threshold
  * SOL_Retry_Count
  * SOL_Retry_Interval
  * Non_Volatile_Bit_Rate
  * Volatile_Bit_Rate

Test)

Using a previously checked out configuration file, modify the
configuration file as follows below to try many configuration
possibilities.  Then for each configuration change:

- Using the --diff and --filename options, verify that each field
  modified in the configuration file is indeed different than what is
  currently stored on the BMC.  Bmc-config should output each
  difference to stdout.

- Using the --commit and --filename options, commit the configuration
  file to the BMC.

- Using the --diff and --filename options, verify that each field has
  been written to the BMC and there are no longer any differences
  Bmc-config should not output anything to stdout.

- Ensure that fields can be changed once and then changed back.  For
  example for Yes/No fields, configure a "Yes" to a "No", then back
  to a "Yes".

- If configuration changed configuration cannot be done:
  * Have some configuration fields been made read-only?
  * Are some configuration fields not implemented?
  * Are some configuration inputs not accepted?
  * Possibly something else?

Configuration changes to try:
- For each "User" section:
  * Username
    o Change username to something different.
    o Ensure username of length 16 can be configured.
  * Enable_User
    o Can configure both Yes and No
  * Password
    o Can change username to something different.
    o Ensure empty password (no input) can be configured.
    o Ensure password of length 16 (20 if IPMI 2.0 supported) can be
      configured.
  * Lan_Enable_IPMI_Msgs
    o Can configure both Yes and No
  * Lan_Privilege_Limit
    o Can change privilege level to User, Operator, and Administrator
  * SOL_Payload_Access
    o Can configure both Yes and No
- For the Lan_Channel section:
  * Volatile_Access_Mode
    o Can configure Disabled and Always_Available
  * Volatile_Enable_Per_Message_Auth
    o Can configure both Yes and No
  * Non_Volatile_Access_Mode
    o Can configure Disabled and Always_Available
  * Non_Volatile_Enable_Per_Message_Auth
    o Can configure both Yes and No
- For the Lan_Conf section:
  * IP_Address_Source
    o Can configure Static and Use_DHCP
  * IP_Address
    o Can configure a different IP address
  * MAC_Address
    o Can configure a different MAC address
  * Subnet_Mask
    o Can configure a different Subnet address
  * Default_Gateway_IP_Address
    o Can configure a different IP address
  * Default_Gateway_MAC_Address
    o Can configure a different MAC address
  * Backup_Gateway_IP_Address
    o Can configure a different IP address
  * Backup_Gateway_MAC_Address
    o Can configure a different MAC address
- For the Lan_Conf_Auth section:
  * Callback_Enable_Auth_Type_None
    o Can configure both Yes and No
  * Callback_Enable_Auth_Type_MD2
    o Can configure both Yes and No
  * Callback_Enable_Auth_Type_MD5
    o Can configure both Yes and No
  * Callback_Enable_Auth_Type_Straight_Password
    o Can configure both Yes and No
  * User_Enable_Auth_Type_None
    o Can configure both Yes and No
  * User_Enable_Auth_Type_MD2
    o Can configure both Yes and No
  * User_Enable_Auth_Type_MD5
    o Can configure both Yes and No
  * User_Enable_Auth_Type_Straight_Password
    o Can configure both Yes and No
  * Operator_Enable_Auth_Type_None
    o Can configure both Yes and No
  * Operator_Enable_Auth_Type_MD2
    o Can configure both Yes and No
  * Operator_Enable_Auth_Type_MD5
    o Can configure both Yes and No
  * Operator_Enable_Auth_Type_Straight_Password
    o Can configure both Yes and No
  * Admin_Enable_Auth_Type_None
    o Can configure both Yes and No
  * Admin_Enable_Auth_Type_MD2
    o Can configure both Yes and No
  * Admin_Enable_Auth_Type_MD5
    o Can configure both Yes and No
  * Admin_Enable_Auth_Type_Straight_Password
    o Can configure both Yes and No
- For the Lan_Conf_Security_Keys section (if IPMI 2.0 is supported):
  * K_G
    o Can configure a different key
    o Ensure empty key (no input) can be configured.
- For the Lan_Conf_Misc:
  * Enable_Gratuitous_ARPs
    o Can configure both Yes and No
  * Enable_ARP_Response
    o Can configure both Yes and No
  * Gratuitous_ARP_Interval
    o Can configure a different value (i.e. 5 to 6)
- For Rmcpplus_Conf_Privilege section:
  * Maximum_Privilege_Cipher_Suite_Id_0
    o Can configure Unused, User, Operator, and Administrator.
  * Maximum_Privilege_Cipher_Suite_Id_1
    o Can configure Unused, User, Operator, and Administrator.
  * Maximum_Privilege_Cipher_Suite_Id_2
    o Can configure Unused, User, Operator, and Administrator.
  * Maximum_Privilege_Cipher_Suite_Id_3
    o Can configure Unused, User, Operator, and Administrator.
- For SOL_Conf section (if IPMI 2.0 is supported):
  * Enable_SOL 
    o Can configure both Yes and No
  * SOL_Privilege_Level
    o Can configure User, Operator, and Administrator.
  * Force_SOL_Payload_Authentication
    o Can configure both Yes and No
  * Force_SOL_Payload_Encryption
    o Can configure both Yes and No
  * Character_Accumulate_Interval
    o Can configure a different value (i.e. 5 to 6)
  * Character_Send_Threshold
    o Can configure a different value (i.e. 5 to 6)
  * SOL_Retry_Count
    o Can configure a different value (i.e. 5 to 6)
  * SOL_Retry_Interval
    o Can configure a different value (i.e. 5 to 6)
  * Non_Volatile_Bit_Rate
    o Can configure a different bit rate (i.e. 57600 to 115200)
  * Volatile_Bit_Rate
    o Can configure a different bit rate (i.e. 57600 to 115200)

Test)

Using a previously checked out configuration file, modify all the
"Non_Volatile" fields but not "Volatile" fields to something
different.  Power off the IPMI machine and power it back on.  Verify
that all "Volatile" fields not hold the new values stored in the
"Non_Volatile" fields.

Test)

Reboot the machine.  Using --checkout, checkout the current
configuration.  Configure all fields to be the "opposite" or
"different" of what they currently are (i.e. No to Yes, User to
Administrator, etc.).

Power off the machine and power it back on.

Using the --diff option, verify that newly configured fields have been
saved across a reboot.

Again, configure all fields "opposite" again.

Power off the machine and power it back on.

Using the --diff option, verify that newly configured fields have been
saved across a reboot.

Bmc-info Testing
----------------

Test)

Execute bmc-info with no bmc-info specific options, verify tool:
- Executes without errors
- All fields output are correct.  Key fields to verify:
  * Firmware Revision
  * IPMI Version
  * Manufacturer ID
    o The name of the manufacter outputs
 
      i.e. "Manufacturer ID       : SOME-COMPANY (1234)"
           vs.
           "Manufacturer ID       : 1234"
      
      If the above is not the case, and the vendor is registered with
      IANA, is there a firmware bug?
  * Product ID
  * GUID
  * Channel Information - Medium Type
    o If IPMI over LAN is supported, atleast one should be == "802.3 LAN"
  * Channel Information - Vendor ID
    o Most if not all should be == "Intelligent Platform Management Interface forum (7154)"

Ipmi-chassis Testing
--------------------

If the remote system supports an IPMI controllable LED:

Test)

Execute ipmi-chassis with --chassis-identify=force, verify remote system:
- Has LED turned on indefinitely.

Execute ipmi-chassis with --chassis-identify=turn-off, verify remote system:
- Has LED turned off.

Execute ipmi-chassis with --chassis-identify=30, verify remote system:
- Has LED turned on for about 30 seconds, then turns itself off.

Ipmi-sensors Testing
--------------------

Test)

Execute ipmi-sensors with no ipmi-sensors specific options, verify tool:
- Executes without errors
- All threshold and discrete sensor readings that should be output are
  output with a reading and/or event.
  * If N/A is output instead, is the sensor improperly listed a
    software sensor?  Is the sensor disabled?  Is sensor scanning
    disabled?  Is the event-reading-type-code of the sensor correct?
- All threshold values (i.e. temperature, rpm, voltage, etc.) are
  valid/correct values.
  * If not, are stored SDR values for this sensor correct?
- All units are valid/correct.
  * If not, are stored SDR values for this sensor correct?
- All groups are valid/correct.
  * If not, are stored SDR values for this sensor correct?

Test)

Execute ipmi-sensors with very verbose output (-vv), verify tool:
- Executes without errors
- All fields output are correct.  Key fields to verify:
  * Sensor Number
  * Sensor Owner ID
    o BMC owned sensors should be 0x20.
    o The combination of Sensor Owner ID and Sensor Number should
      point to a unique sensor.
  * Entity ID
    o The name of the Entity ID outputs 
      i.e. "Entity ID: system board (7)"
           vs.
           "Entity ID: 7"

      If the above is not the case, are all the Entity IDs valid?  Do they
      belong in the proper ranges defined by the IPMI specification?
  * Lower Critical Threshold
  * Upper Critical Threshold
  * Lower Non-Critical Threshold
  * Upper Non-Critical Threshold
  * Lower Non-Recoverable Threshold
  * Upper Non-Recoverable Threshold
    o All thresholds listed are correct.  Those that are not
      readable/relevant are output w/ "N/A".  If not output with
      "N/A", does the BMC properly label them as readable
      vs. unreadable?
  * Assertion Event Enabled
  * Deassertion Event Enabled
    o All supported assertion and deassertion events are listed.

Test)

Testing Power Supply Sensors:

- Use a dual power supply motherboard.
- Verify ipmi-sensors lists the power supply sensors as having an
  event of "Presence Detected".
- Unplug one of the power supplies.
- Verify ipmi-sensors now lists the power supply sensor with an
  appropriate event message, such as "Power Supply Failure detected"
  or "Power Supply input lost (AC/DC)".
- Plug the power supply back in.
- Verify ipmi-sensors not lists the power supply sensors as having an
  event of "Presence Detected".

Test)

Testing Intrusion Sensors:

- Verify ipmi-sensors lists the intrusion sensor as "OK".
- Open the case/chassis/motherboard/etc.
- Verify ipmi-sensors now lists the intrusion sensor with an
  appropriate event message, such as "General Chassis Intrusion".

Ipmi-sel Testing
----------------

Test)

Execute ipmi-sel with no ipmi-sel specific options, verify tool:
- Executes without errors
- All dates on SEL records are correct
  * If not, is the BMC time set correctly?
- Sensor names are output correctly.
  * If not, are the SEL records reporting the correct sensor number
    and/or sensor owner id?

Test)

Execute ipmi-sel with --display and --display-range, verify tool:
- Executes without errors
- Exact record ids listed in options are output.
- Exact record ids output match record ids listed with default
  (i.e. list all records) output.
  * If not, are record ids stored incorrectly?

Test)

Execute ipmi-sel with --delete-all, verify tool:
- Executes without errors
- SEL is completely cleared.  Subsequent calls to ipmi-sel result in
  no output.

Ipmi-fru Testing
----------------

Test)

Execute ipmi-fru with no ipmi-fru specific options, verify tool:
- Executes without errors
- All FRU entries are output fully
- No outputs of checksum errors
  - If checksum errors output, are checksums valid?

Ipmiconsole Testing
-------------------

Configure all BIOS settings and SOL settings to enable SOL.  Enable
the remote machine to except sysrqs (in Linux, this requires
configuration of console=ttySX on the kernel boot line).

For purpose of this set of tests, consider this set of configuration
options from bmc-config the "pristine" SOL configuration and the SOL1
user configuration.

Section User5
        ## Give Username
        Username                                     SOL1
        ## Possible values: Yes/No or blank to not set
        Enable_User                                  Yes
        ## Give password or blank to clear. MAX 16 chars.
        Password                                     soltest
        ## Possible values: Yes/No
        Lan_Enable_IPMI_Msgs                         Yes
        ## Possible values: Yes/No
        Lan_Enable_Link_Auth                         No
        ## Possible values: Yes/No
        Lan_Enable_Restricted_to_Callback            No
        ## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary/No_Access
        Lan_Privilege_Limit                          Administrator
        ## Possible values: Yes/No
        SOL_Payload_Access                           Yes
EndSection

Section Rmcpplus_Conf_Privilege
        ## Possible values: Unused/User/Operator/Administrator/OEM_Proprietary
        Maximum_Privilege_Cipher_Suite_Id_0           Administrator
        ## Possible values: Unused/User/Operator/Administrator/OEM_Proprietary
        Maximum_Privilege_Cipher_Suite_Id_1           Administrator
        ## Possible values: Unused/User/Operator/Administrator/OEM_Proprietary
        Maximum_Privilege_Cipher_Suite_Id_2           Administrator
        ## Possible values: Unused/User/Operator/Administrator/OEM_Proprietary
        Maximum_Privilege_Cipher_Suite_Id_3           Administrator
EndSection

Section SOL_Conf
        ## Possible values: Yes/No
        Enable_SOL                                   Yes
        ## Possible values: Callback/User/Operator/Administrator/OEM_Proprietary
        SOL_Privilege_Level                          Administrator
        ## Possible values: Yes/No
        Force_SOL_Payload_Authentication             Yes
        ## Possible values: Yes/No
        Force_SOL_Payload_Encryption                 Yes
        ## Give a valid integer. Each unit is 5ms
        Character_Accumulate_Interval                5
        ## Give a valid number
        Character_Send_Threshold                     50
        ## Give a valid integer
        SOL_Retry_Count                              5
        ## Give a valid integer. Interval unit is 10ms
        SOL_Retry_Interval                           10
        ## Possible values: Serial/9600/19200/38400/57600/115200
        Non_Volatile_Bit_Rate                        115200
        ## Possible values: Serial/9600/19200/38400/57600/115200
        Volatile_Bit_Rate                            115200
        ## Give a valid port number
        ## SOL_Payload_Port_Number                   623
EndSection

Test)

Configure "pristine" configuration.

Execute ipmiconsole, authentication with SOL1, verify tool:
- Establishes a SOL session by outputting "[SOL established]"
- Verify session can be exitted cleanly (by default type &.).

Test)

Begin with "pristine" configuration.

Disable SOL Payload access for user sol1.

Execute ipmiconsole, authentication with SOL1, verify tool:
- Does not establish an SOL session, outputting "SOL unavailable"
* If it outputs a different error, are the proper completion codes
  being returned?  It is possible an alternate completion code could
  be acceptable.  It is most important that the connection not
  succeed.

Test)

Begin with "pristine" configuration.

Configure lan_privilege_limit "user" for sol1.

Execute ipmiconsole, authentication with SOL1 and privilege level user
(-l user), verify tool:
- Does not establish an SOL session, outputting "privilege level
  insufficient".
* If it outputs a different error, are the proper completion codes
  being returned?  It is possible an alternate completion code could
  be acceptable.  It is most important that the connection not
  succeed.

Test)

Begin with "pristine" configuration.

Configure lan_privilege_limit "user" for sol1.

Configure sol_privilege_level to "user".

Execute ipmiconsole, authentication with SOL1 and privilege level user
(-l user), verify tool:
- Establishes a SOL session by outputting "[SOL established]"
- Verify session can be exitted cleanly (by default type &.).

Test)

Begin with "pristine" configuration.

Disable SOL (Enable_SOL field).

Execute ipmiconsole, authentication with SOL1, verify tool:
- Does not establish an SOL session, outputting "SOL unavailable"
* If it outputs a different error, are the proper completion codes
  being returned?  It is possible an alternate completion code could
  be acceptable.  It is most important that the connection not
  succeed.

Test)

Establish a SOL session.

While in a session, generate a break (by default generated via &B)
and ensure the remote console has received it.  In Linux, if sysrqs
are enabled properly, an &B? should output the linux sysrq menu.

Test)

Establish a SOL session.

While in a session, reboot the remote machine, and ensure the BIOS
(or EFI, etc.) can be entered and BIOS settings can be
modified.

Test)

Establish a SOL session.

While a session is currently active, in a different window, execute
ipmiconsole w/ the --dont-steal option, authenticating with SOL1,
verify tool:
- Does not establish an SOL session, outputting "SOL in use".
- The original SOL session has stayed alive.
* If this does not work, does proper SOL payload activation status
  work?

Test)

Establish a SOL session.

While a session is currently active, in a different window, execute
ipmiconsole w/ the --deactivate option, authenticating with SOL1, verify tool:
- Does not establish an SOL session.
- The original SOL session has been terminated.
* If this does not work, does proper SOL payload deactivation work?

Test)

Establish a SOL session.

While a session is currently active, in a different window, execute
ipmiconsole, authenticating with SOL1, verify tool:
- Establishes a SOL session by outputting "[SOL established]"
- The original SOL session has been terminated, and "[SOL session
  stolen]" is reported.
* If this does not work, does SOL properly inform "old" sessions that
  it is being terminated?  does proper SOL payload deactivation work?

Test)

Configure "pristine" configuration.

Execute ipmiconsole w/ -I 0, -I 1, and -I 2, authentication with SOL1,
verify tool:
- Does not establish an SOL session under each input to the -I option,
  outputting "SOL requires encryption".
* If it outputs a different error, are the proper completion codes
  being returned?  It is possible an alternate completion code could
  be acceptable.  It is most important that the connection not
  succeed.

Execute ipmiconsole w/ -I 3, authentication with SOL1, verify tool:
- Establishes a SOL session by outputting "[SOL established]"

Test)

Begin with "pristine" configuration.

Configure remote system to *not* require SOL Payload Authentication
and *not* require SOL Payload Encryption.

Execute ipmiconsole w/ -I 0, -I 1, -I 2, -I 3, authentication with SOL1,
verify tool:
- Establishes a SOL session by outputting "[SOL established]" under
  each input to the -I option.


Ipmipower Testing
-----------------

Test)

Begin with the remote machine currently powered off.

Execute ipmipower w/ --stat, authenticating with USER1, verify tool:
- Executes without errors.
- Properly reports the state of the machine as "off".

Execute ipmipower w/ --on, authenticating with USER1, verify tool:
- Returns an error of "privilege level cannot be obtained for this user"

Execute ipmipower w/ --on, authenticating with OPERATOR1, verify tool:
- Returns "ok" and turns on the node.

Execute ipmipower w/ --stat, authenticating with USER1, verify tool:
- Executes without errors.
- Properly reports the state of the machine as "on".

Execute ipmipower w/ --off, authenticating with USER1, verify tool:
- Returns an error of "privilege level cannot be obtained for this user"

Execute ipmipower w/ --off, authenticating with OPERATOR1, verify tool:
- Returns "ok" and turns off the node.

Execute ipmipower w/ --stat, authenticating with USER1, verify tool:
- Executes without errors.
- Properly reports the state of the machine as "off".

In-Band KCS Testing
-------------------

Test)

Execute bmc-info in-band, verify tool:
- Executes without errors.
- If tool fails to execute, determine:
  * A) Are memory-mapped address properly stored in the SMBIOS or
    other locations?
  * B) Is KCS accessed through the default memory-mapped addresses?

Out-of-Band Testing
-------------------

